<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | KHstats</title>
    <link>/categories/r/</link>
      <atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sat, 14 Mar 2020 21:13:14 -0500</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>R</title>
      <link>/categories/r/</link>
    </image>
    
    <item>
      <title>Customizable correlation plots in R</title>
      <link>/blog/corr-plots/corr-plots/</link>
      <pubDate>Sat, 14 Mar 2020 21:13:14 -0500</pubDate>
      <guid>/blog/corr-plots/corr-plots/</guid>
      <description>


&lt;hr /&gt;
&lt;div id=&#34;tldr&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;TL;DR&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you’re ever felt limited by correlogram packages in &lt;code&gt;R&lt;/code&gt;, this post will show you how to write your own function to tidy the many correlations into a &lt;code&gt;ggplot2&lt;/code&gt;-friendly form for plotting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;By the end, you will be able to run one function to get a tidied data frame of correlations:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;formatted_cors(mtcars) %&amp;gt;% head() %&amp;gt;% kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;measure1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;measure2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;r&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;P&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;sig_p&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_if_sig&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;r_if_sig&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cyl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;disp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;hp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.00e-07&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.00e-07&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;drat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.78e-05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.78e-05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;wt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;You can then run &lt;code&gt;ggplot2&lt;/code&gt; code on this data to make your own correlation heat maps.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;/blog/corr-plots/corr-plots_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you just want the code, &lt;a href=&#34;#just-the-code&#34;&gt;skip to the end&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;less-customizable-options&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Less-customizable options&lt;/h1&gt;
&lt;p&gt;I really appreciate some of the packages and functions that allow me to make correlation plots super quickly using &lt;code&gt;R&lt;/code&gt;. Here are a few examples:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;corrplot::corrplot(cor(mtcars))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/corr-plots/corr-plots_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;corrgram::corrgram(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &amp;#39;seriation&amp;#39;:
##   method         from 
##   reorder.hclust gclus&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/corr-plots/corr-plots_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggcorrplot::ggcorrplot(cor(mtcars))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/corr-plots/corr-plots_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;All of these are nice, but none of them are ultimately as customizable as I need them to be. I’ll next show how you can bypass using someone else’s function constraints to prepare correlations in your data in a &lt;code&gt;ggplot2&lt;/code&gt;-friendly format.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-the-correlations&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Getting the correlations&lt;/h1&gt;
&lt;p&gt;We could use the base &lt;code&gt;R&lt;/code&gt; function &lt;code&gt;cor()&lt;/code&gt; to get our correlations, but I do not like the defaults for missing data. Instead, I use Frank Harrell’s &lt;code&gt;Hmisc::rcorr()&lt;/code&gt; function for two reasons:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;it drops missing pairs as the default&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;it returns p-values, so you only need one function to get both the correlation coefficient and matching p-value&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let’s load the libraries we’ll need for this, which are &lt;code&gt;knitr&lt;/code&gt; for showing tables using &lt;code&gt;kable&lt;/code&gt;, and &lt;code&gt;tidyverse&lt;/code&gt; (we’ll specifically use &lt;code&gt;tidyr&lt;/code&gt;, &lt;code&gt;dplyr&lt;/code&gt;, &lt;code&gt;ggplot2&lt;/code&gt;, &lt;code&gt;tibble&lt;/code&gt; and &lt;code&gt;purrr&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(knitr)
library(tidyverse, warn.conflict=F)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First, let’s look at our output from our correlation function we’ll use, &lt;code&gt;Hmisc::rcorr()&lt;/code&gt;. It requires the input to be a matrix, and outputs a list of three matrices.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mtcars_cor &amp;lt;- Hmisc::rcorr(as.matrix(mtcars))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These three matrices include the correlation coefficient (default is Pearson’s), &lt;code&gt;r&lt;/code&gt;, the p-value, &lt;code&gt;P&lt;/code&gt;, and the number of observations used for each correlation, &lt;code&gt;n&lt;/code&gt;. Let’s turn each matrix into a &lt;code&gt;data frame&lt;/code&gt; and look at the top six rows with &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;kable&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The correlation coefficients, &lt;code&gt;r&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data.frame(mtcars_cor$r) %&amp;gt;% head() %&amp;gt;% kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mpg&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cyl&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;disp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;hp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;drat&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;wt&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;qsec&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;vs&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;am&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;gear&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;carb&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;mpg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4186840&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6640389&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5998324&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4802848&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5509251&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;cyl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9020329&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8324475&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6999381&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7824958&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5912421&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8108118&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5226070&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4926866&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5269883&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;disp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9020329&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7909486&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7102139&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8879799&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4336979&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7104159&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5912270&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5555692&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3949769&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;hp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8324475&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7909486&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4487591&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6587479&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7082234&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7230967&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.2432043&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1257043&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7498125&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;drat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6999381&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7102139&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4487591&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7124406&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0912048&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4402785&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7127111&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6996101&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.0907898&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;wt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7824958&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8879799&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6587479&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7124406&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1747159&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5549157&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6924953&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5832870&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4276059&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The p-values, &lt;code&gt;P&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data.frame(mtcars_cor$P) %&amp;gt;% head() %&amp;gt;% kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mpg&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cyl&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;disp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;hp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;drat&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;wt&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;qsec&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;vs&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;am&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;gear&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;carb&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;mpg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000002&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000178&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0170820&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000342&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0002850&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0054009&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0010844&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;cyl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000082&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00e-07&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0003661&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0021512&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0041733&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0019423&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;disp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000001&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000053&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0131440&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000052&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0003662&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0009636&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0252679&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;hp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.00e-07&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0e-07&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0099888&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.15e-05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000058&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000029&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1798309&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4930119&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000008&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;drat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.78e-05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8.2e-06&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.3e-06&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0099888&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.80e-06&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6195826&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0116755&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000047&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000084&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6211834&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;wt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0e-07&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000415&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000048&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3388683&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0009798&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0000113&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0004587&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0146386&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The number of observations, &lt;code&gt;n&lt;/code&gt;. There are no missing data in the &lt;code&gt;mtcars&lt;/code&gt; data set so there are 32 pairs used for all correlations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data.frame(mtcars_cor$n) %&amp;gt;% head(n=3) %&amp;gt;% kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mpg&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cyl&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;disp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;hp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;drat&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;wt&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;qsec&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;vs&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;am&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;gear&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;carb&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;mpg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;cyl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;disp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Next we can write a function that formats a &lt;code&gt;data frame&lt;/code&gt; correctly for &lt;code&gt;Hmisc::rcorr()&lt;/code&gt; and then turns each of the three elements of the list (&lt;code&gt;r&lt;/code&gt;,&lt;code&gt;n&lt;/code&gt; and &lt;code&gt;P&lt;/code&gt;)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cors &amp;lt;- function(df) {
  M &amp;lt;- Hmisc::rcorr(as.matrix(df))
  # turn all three matrices (r, n, and P into a data frame)
  Mdf &amp;lt;- map(M, ~data.frame(.x))
  # return the three data frames in a list
  return(Mdf)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nothing too crazy happened in this function. Now we just have a list of three data frames. We can look at the the first element of our list using &lt;code&gt;first()&lt;/code&gt;, which shows us the correlations between all our variables:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cors(mtcars) %&amp;gt;% first() %&amp;gt;% head() %&amp;gt;% kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mpg&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cyl&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;disp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;hp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;drat&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;wt&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;qsec&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;vs&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;am&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;gear&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;carb&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;mpg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4186840&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6640389&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5998324&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4802848&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5509251&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;cyl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9020329&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8324475&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6999381&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7824958&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5912421&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8108118&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5226070&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4926866&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5269883&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;disp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9020329&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7909486&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7102139&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8879799&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4336979&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7104159&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5912270&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5555692&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3949769&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;hp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8324475&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7909486&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4487591&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6587479&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7082234&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7230967&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.2432043&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1257043&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7498125&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;drat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6999381&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7102139&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4487591&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7124406&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0912048&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4402785&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7127111&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6996101&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.0907898&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;wt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7824958&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8879799&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6587479&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7124406&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1747159&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5549157&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6924953&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5832870&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4276059&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;prep-the-correlations-for-ggplot2&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Prep the correlations for &lt;code&gt;ggplot2&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;The next step is to get the data ready for plotting with &lt;code&gt;ggplot2&lt;/code&gt;. We can keep the data in a list for now and use the &lt;code&gt;map()&lt;/code&gt; function from &lt;code&gt;purrr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;First, we need to move the rownames to their own column using &lt;code&gt;tibble::rownames_to_column()&lt;/code&gt;. The output of that looks like:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cors(mtcars) %&amp;gt;%
  map(~rownames_to_column(.x, var=&amp;quot;measure1&amp;quot;)) %&amp;gt;%
  # look at the first element of the list (r)
  first() %&amp;gt;%
  head() %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;measure1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mpg&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cyl&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;disp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;hp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;drat&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;wt&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;qsec&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;vs&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;am&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;gear&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;carb&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4186840&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6640389&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5998324&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4802848&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5509251&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;cyl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9020329&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8324475&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6999381&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7824958&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5912421&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8108118&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5226070&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4926866&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5269883&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;disp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9020329&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7909486&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7102139&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8879799&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4336979&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7104159&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5912270&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5555692&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3949769&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;hp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8324475&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7909486&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4487591&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6587479&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7082234&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7230967&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.2432043&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1257043&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7498125&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;drat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6999381&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7102139&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4487591&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7124406&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0912048&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4402785&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7127111&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6996101&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.0907898&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;wt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7824958&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8879799&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6587479&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7124406&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1747159&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5549157&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6924953&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.5832870&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4276059&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Next, we can turn move of the columns to a single column called &lt;code&gt;measure2&lt;/code&gt; using &lt;code&gt;tidyr::pivot_longer()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cors(mtcars) %&amp;gt;%
  map(~rownames_to_column(.x, var=&amp;quot;measure1&amp;quot;)) %&amp;gt;%
  # format each data set (r,P,n) long
  map(~pivot_longer(.x, -measure1, &amp;quot;measure2&amp;quot;)) %&amp;gt;%
  # look at the first element of the list (r)
  first() %&amp;gt;%
  head() %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;measure1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;measure2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cyl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;disp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;hp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;drat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;wt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now, we’re ready to unlist our data by using &lt;code&gt;bind_rows()&lt;/code&gt;. This will turn our correlations into a very long data frame with all the rows from &lt;code&gt;r&lt;/code&gt;, then &lt;code&gt;n&lt;/code&gt;, then &lt;code&gt;P&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cors(mtcars) %&amp;gt;%
  map(~rownames_to_column(.x, var=&amp;quot;measure1&amp;quot;)) %&amp;gt;%
  # format each data set (r,P,n) long
  map(~pivot_longer(.x, -measure1, &amp;quot;measure2&amp;quot;)) %&amp;gt;%
  # merge our three list elements by binding the rows
  bind_rows(.id = &amp;quot;id&amp;quot;) %&amp;gt;%
  head() %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;id&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;measure1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;measure2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;r&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;r&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cyl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;r&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;disp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;r&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;hp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;r&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;drat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;r&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;wt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For &lt;code&gt;ggplot2&lt;/code&gt;, we’ll need to have &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;, and &lt;code&gt;p&lt;/code&gt; as their own column. We can use &lt;code&gt;pivot_longer()&lt;/code&gt; to do this.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cors(mtcars) %&amp;gt;%
  map(~rownames_to_column(.x, var=&amp;quot;measure1&amp;quot;)) %&amp;gt;%
  # format each data set (r,P,n) long
  map(~pivot_longer(.x, -measure1, &amp;quot;measure2&amp;quot;)) %&amp;gt;%
  # merge our three list elements by binding the rows
  bind_rows(.id = &amp;quot;id&amp;quot;) %&amp;gt;%
  pivot_wider(names_from = id, values_from = value) %&amp;gt;%
  head() %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;measure1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;measure2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;r&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;P&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cyl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;disp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;hp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.00e-07&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;drat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.78e-05&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;wt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Finally, we can add a few columns that will potentially be useful later for making our correlation plots more informative. Let’s add columns that tell us whether the p-value was less than 0.05, and if so, give us back 1) the p-value and 2) the correlation coefficient, in case we want to label our plot with these values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cors(mtcars) %&amp;gt;%
  map(~rownames_to_column(.x, var=&amp;quot;measure1&amp;quot;)) %&amp;gt;%
  # format each data set (r,P,n) long
  map(~pivot_longer(.x, -measure1, &amp;quot;measure2&amp;quot;)) %&amp;gt;%
  # merge our three list elements by binding the rows
  bind_rows(.id = &amp;quot;id&amp;quot;) %&amp;gt;%
  pivot_wider(names_from = id, values_from = value) %&amp;gt;%
  mutate(sig_p = ifelse(P &amp;lt; .05, T, F),
           p_if_sig = ifelse(P &amp;lt;.05, P, NA),
           r_if_sig = ifelse(r &amp;lt;.05, r, NA)) %&amp;gt;%
  head() %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;measure1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;measure2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;r&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;P&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;sig_p&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_if_sig&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;r_if_sig&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cyl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;disp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;hp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.00e-07&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.00e-07&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;drat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.78e-05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.78e-05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;wt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This seems like everything I think I’ll ever ever want to plot. Of course you could add more. At this point I turned my formatted correlations into a function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;formatted_cors &amp;lt;- function(df){
  cors(df) %&amp;gt;%
    map(~rownames_to_column(.x, var=&amp;quot;measure1&amp;quot;)) %&amp;gt;%
    map(~pivot_longer(.x, -measure1, &amp;quot;measure2&amp;quot;)) %&amp;gt;%
    bind_rows(.id = &amp;quot;id&amp;quot;) %&amp;gt;%
    pivot_wider(names_from = id, values_from = value) %&amp;gt;%
    mutate(sig_p = ifelse(P &amp;lt; .05, T, F),
           p_if_sig = ifelse(P &amp;lt;.05, P, NA),
           r_if_sig = ifelse(P &amp;lt;.05, r, NA))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can test the function works as expected:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;formatted_cors(mtcars) %&amp;gt;% head() %&amp;gt;% kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;measure1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;measure2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;r&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;P&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;sig_p&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;p_if_sig&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;r_if_sig&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cyl&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8521620&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;disp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8475514&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;hp&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.00e-07&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.00e-07&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7761684&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;drat&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.78e-05&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.78e-05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6811719&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;mpg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;wt&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TRUE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.00e+00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.8676594&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;plotting&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Plotting&lt;/h1&gt;
&lt;p&gt;We’re finally ready to plot our correlation heat maps in &lt;code&gt;ggplot2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The simplest form of this plot only requires us to specify &lt;code&gt;measure1&lt;/code&gt; and &lt;code&gt;measure2&lt;/code&gt; on the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;-axis, respectively. Then we can map the correlation &lt;code&gt;r&lt;/code&gt; to the &lt;code&gt;fill&lt;/code&gt; &lt;code&gt;aes&lt;/code&gt;thetic, and add a tile as the &lt;code&gt;geom&lt;/code&gt;etry.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;formatted_cors(mtcars) %&amp;gt;%
  ggplot(aes(x = measure1, y = measure2, fill = r)) +
  geom_tile()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/corr-plots/corr-plots_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can make some minor aesthetic changes, such as the fill coloring scale, titles, and font family.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;formatted_cors(mtcars) %&amp;gt;%
  ggplot(aes(x = measure1, y = measure2, fill = r)) +
  geom_tile() +
  labs(x = NULL, y = NULL, fill = &amp;quot;Pearson&amp;#39;s\nCorrelation&amp;quot;, title=&amp;quot;Correlations in Mtcars&amp;quot;) +
  # map a red, white and blue color scale to correspond to -1:1 sequential gradient
  scale_fill_gradient2(mid=&amp;quot;#FBFEF9&amp;quot;,low=&amp;quot;#0C6291&amp;quot;,high=&amp;quot;#A63446&amp;quot;, limits=c(-1,1)) +
  theme_classic() +
  # remove excess space on x and y axes
  scale_x_discrete(expand=c(0,0)) +
  scale_y_discrete(expand=c(0,0)) +
  # change global font to roboto
  theme(text=element_text(family=&amp;quot;Roboto&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/corr-plots/corr-plots_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can add the correlations for extra information. For this particular plot, I only added significant (p-value less than 0.05) correlations, using the column &lt;code&gt;r_if_sig&lt;/code&gt; that outputs from &lt;code&gt;formatted_cors()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;formatted_cors(mtcars) %&amp;gt;%
  ggplot(aes(measure1, measure2, fill=r, label=round(r_if_sig,2))) +
  geom_tile() +
  labs(x = NULL, y = NULL, fill = &amp;quot;Pearson&amp;#39;s\nCorrelation&amp;quot;, title=&amp;quot;Correlations in Mtcars&amp;quot;,
       subtitle=&amp;quot;Only significant Pearson&amp;#39;s correlation coefficients shown&amp;quot;) +
  scale_fill_gradient2(mid=&amp;quot;#FBFEF9&amp;quot;,low=&amp;quot;#0C6291&amp;quot;,high=&amp;quot;#A63446&amp;quot;, limits=c(-1,1)) +
  geom_text() +
  theme_classic() +
  scale_x_discrete(expand=c(0,0)) +
  scale_y_discrete(expand=c(0,0)) +
  theme(text=element_text(family=&amp;quot;Roboto&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/corr-plots/corr-plots_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Another version of this could involve squares with different sizes to denote strength of correlation using &lt;code&gt;geom_point&lt;/code&gt; with &lt;code&gt;shape&lt;/code&gt; set to a value from &lt;a href=&#34;http://www.sthda.com/english/wiki/ggplot2-point-shapes&#34;&gt;these available &lt;code&gt;geom_shape&lt;/code&gt;s&lt;/a&gt;. Make sure you take the absolute value of the correlation so that strong negative correlations can also be denoted larger.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;formatted_cors(mtcars) %&amp;gt;%
  ggplot(aes(measure1, measure2, col=r)) + ## to get the rect filled
  geom_tile(col=&amp;quot;black&amp;quot;, fill=&amp;quot;white&amp;quot;) +
  geom_point(aes(size = abs(r)), shape=15) +
  labs(x = NULL, y = NULL, col = &amp;quot;Pearson&amp;#39;s\nCorrelation&amp;quot;, title=&amp;quot;Correlations in Mtcars&amp;quot;) +
  theme_classic()+
  scale_color_gradient2(mid=&amp;quot;#FBFEF9&amp;quot;,low=&amp;quot;#0C6291&amp;quot;,high=&amp;quot;#A63446&amp;quot;, limits=c(-1,1))  +
  scale_x_discrete(expand=c(0,0)) +
  scale_y_discrete(expand=c(0,0)) +
  theme(text=element_text(family=&amp;quot;Roboto&amp;quot;)) +
  scale_size(range=c(1,11), guide=NULL) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/corr-plots/corr-plots_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;576&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;just-the-code&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Just the code&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cors &amp;lt;- function(df) {
  M &amp;lt;- Hmisc::rcorr(as.matrix(df))
  Mdf &amp;lt;- map(M, ~data.frame(.x))
  return(Mdf)
}

formatted_cors &amp;lt;- function(df){
  cors(df) %&amp;gt;%
    map(~rownames_to_column(.x, var=&amp;quot;measure1&amp;quot;)) %&amp;gt;%
    map(~pivot_longer(.x, -measure1, &amp;quot;measure2&amp;quot;)) %&amp;gt;%
    bind_rows(.id = &amp;quot;id&amp;quot;) %&amp;gt;%
    pivot_wider(names_from = id, values_from = value) %&amp;gt;%
    mutate(sig_p = ifelse(P &amp;lt; .05, T, F),
           p_if_sig = ifelse(P &amp;lt;.05, P, NA),
           r_if_sig = ifelse(P &amp;lt;.05, r, NA))
}

formatted_cors(mtcars) %&amp;gt;%
  ggplot(aes(measure1, measure2, fill=r, label=round(r_if_sig,2))) +
  geom_tile() +
  labs(x = NULL, y = NULL, fill = &amp;quot;Pearson&amp;#39;s\nCorrelation&amp;quot;, title=&amp;quot;Correlations in Mtcars&amp;quot;,
       subtitle=&amp;quot;Only significant Pearson&amp;#39;s correlation coefficients shown&amp;quot;) +
  scale_fill_gradient2(mid=&amp;quot;#FBFEF9&amp;quot;,low=&amp;quot;#0C6291&amp;quot;,high=&amp;quot;#A63446&amp;quot;, limits=c(-1,1)) +
  geom_text() +
  theme_classic() +
  scale_x_discrete(expand=c(0,0)) +
  scale_y_discrete(expand=c(0,0)) +
  theme(text=element_text(family=&amp;quot;Roboto&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/corr-plots/corr-plots_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Understanding Conditional and Iterated Expectations with a Linear Regression Model</title>
      <link>/blog/iterated-expectations/iterated-expectations/</link>
      <pubDate>Sat, 14 Mar 2020 21:13:14 -0500</pubDate>
      <guid>/blog/iterated-expectations/iterated-expectations/</guid>
      <description>
&lt;link href=&#34;/rmarkdown-libs/pagedtable/css/pagedtable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/pagedtable/js/pagedtable.js&#34;&gt;&lt;/script&gt;


&lt;hr /&gt;
&lt;div id=&#34;tldr&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;TL;DR&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You can a regress an outcome on a grouping variable &lt;em&gt;plus any other variables&lt;/em&gt; and the unadjusted and adjusted group means will be &lt;em&gt;identical&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can see this in a simple example using the &lt;code&gt;iris&lt;/code&gt; data:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;%
  mutate(preds = predict(lm(Sepal.Length ~
                              Sepal.Width +
                              Petal.Length +
                              Petal.Width +
                              Species,
                            data = .))) %&amp;gt;%
  group_by(Species) %&amp;gt;%
  summarise(mean_SL = mean(Sepal.Length),
            mean_SL_preds = mean(preds)) %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Species&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mean_SL&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mean_SL_preds&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.006&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.006&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;versicolor&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.936&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.936&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;virginica&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.588&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.588&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This is because &lt;span class=&#34;math inline&#34;&gt;\(E[E[Y|X,Z]|Z=z]=E[Y|Z=z]\)&lt;/span&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can view a fitted value from the regression, &lt;span class=&#34;math inline&#34;&gt;\(E[Y|X,Z]\)&lt;/span&gt;, as a random variable to help us see this.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;#the-proof&#34;&gt;Skip to the end&lt;/a&gt; to see the proof.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&#34;/img/expectations.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I’ll admit I spent much of my first-semester of grad school struggling to understand the difference between &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;. When I finally learned all the rules for expectations of random variables, I still had zero appreciation for their implications in my future work as an applied statistician.&lt;/p&gt;
&lt;p&gt;I recently found myself in a rabbit hole of conditional and iterated expectation properties while trying to write a seemingly simple function in &lt;code&gt;R&lt;/code&gt;. Now that I have the output of my function all sorted out, I have a newfound appreciation for how I can use regressions – a framework I’m very comfortable with – to rethink some of the properties I learned in my probability theory courses.&lt;/p&gt;
&lt;p&gt;In the function, I was regressing an outcome on a few variables plus a grouping variable, and then returning the group means of the fitted values. My function kept outputting adjusted group means that were &lt;em&gt;identical&lt;/em&gt; to the unadjusted group means.&lt;/p&gt;
&lt;p&gt;I soon realized that for what I needed to do, my grouping variable should not be in the regression model. However, I was still perplexed as to how the adjusted and unadjusted group means could be the same after adjusting for other variables.&lt;/p&gt;
&lt;p&gt;I created a very basic example to test this unexpected result. I regressed a variable from the &lt;code&gt;iris&lt;/code&gt; data set, &lt;code&gt;Sepal.Length&lt;/code&gt;, on another variable called &lt;code&gt;Sepal.Width&lt;/code&gt; and a grouping variable &lt;code&gt;Species&lt;/code&gt;. I then looked at the &lt;code&gt;Species&lt;/code&gt; group predictions for both the unadjusted &lt;code&gt;Sepal.Length&lt;/code&gt; and fitted values from my linear regression model for &lt;code&gt;Sepal.Length&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
library(knitr)

iris %&amp;gt;%
  # fit a linear regression for sepal length conditional on sepal width and species type
  # make a new column containing the fitted predictions for sepal length
  mutate(preds = predict(lm(Sepal.Length ~ Sepal.Width + Species, data = .))) %&amp;gt;%
  # prepare to get group means by grouping data by species
  group_by(Species) %&amp;gt;%
  # compute unadjusted and adjusted group means
  summarise(mean_SL = mean(Sepal.Length),
            mean_SL_preds = mean(preds)) %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;Species&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mean_SL&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mean_SL_preds&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;setosa&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.006&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.006&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;versicolor&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.936&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5.936&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;virginica&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.588&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.588&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I saw the same strange output, even in my simple example. I realized this must be some statistics property I’d learned about and since forgotten, so I decided to write out what I was doing in expectations.&lt;/p&gt;
&lt;p&gt;First, I wrote down the linear regression I fit:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(E[\mathrm{SepalLength}|\mathrm{SepalWidth},\mathrm{Species}]\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Since I took the means for each species type, I added another expectation around the first (a conditional expectation) in which I fixed species type to each of the three species:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(E[E[\mathrm{SepalLength}|\mathrm{SepalWidth},\mathrm{Species}]|\mathrm{Species}=virginica]\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(E[E[\mathrm{SepalLength}|\mathrm{SepalWidth},\mathrm{Species}]|\mathrm{Species}=versicolor]\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(E[E[\mathrm{SepalLength}|\mathrm{SepalWidth},\mathrm{Species}]|\mathrm{Species}=setosa]\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;My table of unadjusted and adjusted Sepal Length means was therefore showing me that:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[E[E[\mathrm{SepalLength}|\mathrm{SepalWidth},\mathrm{Species}]|\mathrm{Species}=species] \\ = E[\mathrm{SepalLength}|\mathrm{Species}=species]\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Or, in more general notation:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[E[E[Y|X,Z]|Z=z] = E[Y|Z=z]\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Is it true?! Spoiler alert – yes. Let’s work through the steps of the proof one by one.&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;div id=&#34;proof-set-up&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Proof set-up&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Let’s pretend for the proof that both our &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt; (outcome), &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; (adjustment variable), and &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt; (grouping variable) are categorical (discrete) variables. This is just to make the math a bit cleaner, since the expectation of a discrete variable (a weighted summation) is a little easier to show than the expectation of a continuous variable (the integral of a probability density function times the realization of the random variable).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A few fundamental expectation results we’ll need:&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;conditional-probability&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Conditional probability&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(P(A|B) = \frac{P(A ∩ B)}{P(B)}\)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;partition-theorem&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Partition theorem&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(E[A|B] = \sum_Ba \cdot P(A=a|B=b)\)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;marginal-distribution-from-a-joint-distribution&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Marginal distribution from a joint distribution&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sum_A\sum_Ba\cdot P(A=a,B=b) = \sum_Aa\sum_B\cdot P(A=a,B=b) = \sum_Aa\cdot P(A=a)=E[A]\)&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;step-by-step-proof&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Step-by-step Proof&lt;/h1&gt;
&lt;p&gt;Click on the superscript number after each step for more information.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(E[E[Y|X,Z]|Z=z]\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(=E[E[Y|X,Z=z]|Z=z]\)&lt;/span&gt; &lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(=\sum_{X}E[Y|X=x,Z=z]\cdot P(X=x|Z=z)\)&lt;/span&gt; &lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(=\sum_{X}\sum_{Y}y P(Y=y|X=x,Z=z)\cdot P(X=x|Z=z)\)&lt;/span&gt; &lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(=\sum_{X}\sum_{Y}y \frac{P(Y=y,X=x,Z=z)}{P(X=x,Z=z)}\cdot \frac{P(X=x,Z=z)}{P(Z=z)}\)&lt;/span&gt; &lt;a href=&#34;#fn4&#34; class=&#34;footnote-ref&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(=\sum_{X}\sum_{Y}y \frac{P(Y=y,X=x,Z=z)}{P(Z=z)}\)&lt;/span&gt; &lt;a href=&#34;#fn5&#34; class=&#34;footnote-ref&#34; id=&#34;fnref5&#34;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(=\sum_{Y}y\sum_{X}\frac{P(Y=y,X=x,Z=z)}{P(Z=z)}\)&lt;/span&gt; &lt;a href=&#34;#fn6&#34; class=&#34;footnote-ref&#34; id=&#34;fnref6&#34;&gt;&lt;sup&gt;6&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(=\sum_{Y}y\frac{P(Y=y,Z=z)}{P(Z=z)}\)&lt;/span&gt; &lt;a href=&#34;#fn7&#34; class=&#34;footnote-ref&#34; id=&#34;fnref7&#34;&gt;&lt;sup&gt;7&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(=\sum_{Y}y P(Y=y|Z=z)\)&lt;/span&gt; &lt;a href=&#34;#fn8&#34; class=&#34;footnote-ref&#34; id=&#34;fnref8&#34;&gt;&lt;sup&gt;8&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(=E[Y|Z=z]\)&lt;/span&gt; &lt;a href=&#34;#fn9&#34; class=&#34;footnote-ref&#34; id=&#34;fnref9&#34;&gt;&lt;sup&gt;9&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So, we’ve proved that:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(E[E[Y|X,Z]|Z=z] = E[Y|Z=z]\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;which, thankfully, means I have an answer to my function output confusion. It was a lightbulb moment for me to realize I can think of an inner expectation as a random variable, and all the rules I learned about conditional and iterated expectations can be applied to the regressions I fit on a daily basis.&lt;/p&gt;
&lt;p&gt;Here’s hoping you too feel inspired to revisit probability theory from time to time, even if your work is very applied. It is, after all, a perfect activity for social distancing! 😷&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.math.arizona.edu/~tgk/464_07/cond_exp.pdf&#34;&gt;A Conditional Expectation - Arizona Math&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Because we’re making our outer expectation conditional on &lt;span class=&#34;math inline&#34;&gt;\(Z=z\)&lt;/span&gt;, we can also move &lt;span class=&#34;math inline&#34;&gt;\(Z=z\)&lt;/span&gt; into our inner expectation.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;We can rewrite &lt;span class=&#34;math inline&#34;&gt;\(E[Y|X,Z=z]\)&lt;/span&gt; as the weighted summation of all possible values &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; can take. &lt;span class=&#34;math inline&#34;&gt;\(E[Y|X,Z=z]\)&lt;/span&gt; will only ever be able to take values of &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; that vary over the range of &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(E[Y|X=x,Z=z]\)&lt;/span&gt; since our value &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt; is already fixed. We can weight each of these possible &lt;span class=&#34;math inline&#34;&gt;\(E[Y|X=x,Z=z]\)&lt;/span&gt; values by &lt;span class=&#34;math inline&#34;&gt;\(P(X=x|Z=z)\)&lt;/span&gt;, since that’s the probabilty &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; will take value &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; at our already-fixed &lt;span class=&#34;math inline&#34;&gt;\(z\)&lt;/span&gt;. Thus, we can start to find &lt;span class=&#34;math inline&#34;&gt;\(E[E[Y|X,Z=z]|Z=z]\)&lt;/span&gt; by weighting each &lt;span class=&#34;math inline&#34;&gt;\(E[Y|X=x,Z=z]\)&lt;/span&gt; by &lt;span class=&#34;math inline&#34;&gt;\(P(X=x|Z=z)\)&lt;/span&gt; and adding them all up (see Partition Theorem).&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;We can get the expectation of &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt; at each of those possible values of &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; by a similar process as step 2 (weighting each &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; by &lt;span class=&#34;math inline&#34;&gt;\(P(Y=y|X=x, Z=z)\)&lt;/span&gt;.&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;By the Law of Conditional Probability, we can rewrite our conditional probabilities as joint distributions.&lt;a href=&#34;#fnref4&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn5&#34;&gt;&lt;p&gt;The denominator of the first fraction cancels out with the numerator of the second fraction.&lt;a href=&#34;#fnref5&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn6&#34;&gt;&lt;p&gt;We can switch the summations around so that &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; is outside the summation. This lets us get the joint distribution of only &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(Z\)&lt;/span&gt;.&lt;a href=&#34;#fnref6&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn7&#34;&gt;&lt;p&gt;This is a conditional expectation, written in the form of a joint distribution&lt;a href=&#34;#fnref7&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn8&#34;&gt;&lt;p&gt;By the partition theorem.&lt;a href=&#34;#fnref8&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn9&#34;&gt;&lt;p&gt;Rewriting the previous equation as an expectation.&lt;a href=&#34;#fnref9&#34; class=&#34;footnote-back&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Patient Treatment Timelines for Longitudinal Survival Data</title>
      <link>/blog/trt-timelines/trt-timelines/</link>
      <pubDate>Thu, 28 Nov 2019 21:13:14 -0500</pubDate>
      <guid>/blog/trt-timelines/trt-timelines/</guid>
      <description>


&lt;p&gt;I am a biostatistician at a research university, and I often find myself working with longitudinal survival data. As with any data analysis, I need to examine the quality of my data before deciding which statistical methods to implement.&lt;/p&gt;
&lt;p&gt;This post contains reproducible examples for how I prefer to visually explore survival data containing longitudinal exposures or covariates. I create a “treatment timeline” for each patient, and the end product looks something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Each line represents one patient, and each square represents a measurement at a specified point. I find these graphs useful to look for patterns or discrepancies in follow up times, treatment, and missingness. They also allow me to verify that my coding is correct as I move through different data manipulations for my analyses.&lt;/p&gt;
&lt;p&gt;For the following examples I generate longitudinal survival data sets. I skip over how I made this data because it’s not the focus of this post, but if you have questions about the data generation please let me know. In general, I am trying to work from the point in a survival data analysis where you’ve already calculated each individual’s time to event.&lt;/p&gt;
&lt;div id=&#34;example-1-binary-treatment&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Example 1: Binary Treatment&lt;/h1&gt;
&lt;p&gt;To make these charts, my first step is to load the package &lt;code&gt;tidyverse&lt;/code&gt;, since I use functions from &lt;code&gt;dplyr&lt;/code&gt;, &lt;code&gt;tidyr&lt;/code&gt;, &lt;code&gt;forcats&lt;/code&gt;, and &lt;code&gt;ggplot2&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is the data generation code. If you’re interested in how I made it, you can check the comments, but if not, &lt;strong&gt;I recommend just copying and pasting into your &lt;code&gt;R&lt;/code&gt; console to try the plotting code.&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(7)
n &amp;lt;- 50 # The data sets I make these visualizations for are typically 100-500 patients in size, but for space purposes I&amp;#39;ll set my n to only 50.
dat &amp;lt;- 
  tibble(.rows = n) %&amp;gt;%  # empty data frame / tibble with n rows
  mutate(pt_id = factor(row_number()),  # patient ids are 1-n
         pt_trt_prob = runif(n,0,1), # randomly generate a treatment probability for each patient so we can see patterns
         months_followup = round(runif(n, 0, 20)), # randomly generate length of time in the study
         death = rbinom(n, 1, .5)) %&amp;gt;% # death randomly occurs at any time point. Obviously an unrealistic assumption. :)
  group_by(pt_id) %&amp;gt;%   # group by patient so we can do more data manipulation
  complete(months_followup = full_seq(0:max(months_followup), 1)) %&amp;gt;% # add i^n all the months patients are in the study
  fill(pt_trt_prob, .direction = &amp;quot;up&amp;quot;) %&amp;gt;% # fill in the treatment probability I made earlier so I can use this to add treatment for every time point
  ungroup() %&amp;gt;% # no longer need patients grouped
  mutate(trt = factor(rbinom(row_number(), 1, pt_trt_prob^2)),  # fill in treatment for everyone based on their treatment probability
         death = replace_na(death, 0)) %&amp;gt;%  # also fill in death
  select(pt_id, months_followup, trt, death) # remove leftover columns from data generation&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s look at the data. It’s in “long” format with patient ID’s repeating for each &lt;code&gt;month_followup&lt;/code&gt; they were in my (fake) study. At every month, we know whether or not they were on the treatment, and whether they died at that time point. This first example does not contain any missingness.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::kable(head(dat))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;pt_id&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;months_followup&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;trt&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;death&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We can now plot our data in a very basic way. We really only need to specify in the &lt;code&gt;aes&lt;/code&gt;thetics that the &lt;code&gt;x&lt;/code&gt;-axis is time, the &lt;code&gt;y&lt;/code&gt;-axis is subject IDs, the &lt;code&gt;col&lt;/code&gt;or should correspond to treatment, and &lt;em&gt;our lines should be &lt;code&gt;group&lt;/code&gt;ed together by subject&lt;/em&gt;. Don’t forget that last one! Then we can say we want &lt;code&gt;geom_line&lt;/code&gt; to make a base timeline for each subject, and the points on the timeline should be squares (&lt;code&gt;shape = 15&lt;/code&gt; in the &lt;code&gt;geom_point&lt;/code&gt; mapping function).&lt;/p&gt;
&lt;p&gt;Et voilà! A cute patient treatment timeline.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat %&amp;gt;%
  ggplot(aes(x = months_followup, y = pt_id, group = pt_id, col = trt)) +
  geom_line()  + 
  geom_point(shape = 15)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Okay, it’s not &lt;em&gt;that&lt;/em&gt; cute. But that little bit of code is really the core of the plot! If you want to add markers of death (or any other event) and rearrange by length of follow up time it just takes a little bit of extra data manipulation and one additional line of &lt;code&gt;ggplot2&lt;/code&gt; code.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat %&amp;gt;%
  group_by(pt_id) %&amp;gt;%
  # make a new column with all patients last follow up visit
  mutate(last_month_followup = max(months_followup), 
         # new variable for month that patients died, if they died
         month_death = case_when(death == 1 ~ last_month_followup, TRUE ~ NA_real_)) %&amp;gt;%
         # reorder pt id by last month of follow up (highest to lowest)
         # without fct_rev, chart is arranged in opposite direction (lowest to highest)
  ungroup() %&amp;gt;%
  mutate(pt_id = fct_rev(fct_reorder(pt_id, last_month_followup))) %&amp;gt;%
  ggplot(aes(x = months_followup, y = pt_id, group = pt_id, col = trt)) +
  geom_line()  + 
  geom_point(shape = 15) + 
  # add in a new mapping layer of points that correspond to death
  geom_point(aes(x = month_death, y = pt_id), col = &amp;quot;black&amp;quot;, shape = 4) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 515 rows containing missing values (geom_point).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Don’t worry about the warning for removing missing values – it’s because we have &lt;code&gt;NA&lt;/code&gt;s at most months for our &lt;code&gt;month_death&lt;/code&gt;, so &lt;code&gt;geom_point&lt;/code&gt; doesn’t know where to put an ‘x’ marker.&lt;/p&gt;
&lt;p&gt;Finally, let’s work on making the plot a bit nicer to look at:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat %&amp;gt;%
  group_by(pt_id) %&amp;gt;%
  mutate(last_month_followup = max(months_followup), 
         month_death = case_when(death == 1 ~ last_month_followup, TRUE ~ NA_real_)) %&amp;gt;%
  ungroup() %&amp;gt;%
  mutate(pt_id = fct_rev(fct_reorder(pt_id, last_month_followup)),
         # make the treatment variable labels nicer
         trt = factor(trt, levels=0:1, labels=c(&amp;quot;No&amp;quot;,&amp;quot;Yes&amp;quot;))) %&amp;gt;%
  ggplot(aes(x = months_followup, y = pt_id, group = pt_id, col = trt)) +
  geom_line()  + 
  geom_point(shape = 15) + 
  geom_point(aes(x = month_death, y = pt_id), col = &amp;quot;black&amp;quot;, shape = 4) +
  theme_bw() +
  labs(x = &amp;quot;Months of Follow-Up&amp;quot;, y = &amp;quot;Patient ID&amp;quot;, col = &amp;quot;Treatment&amp;quot;,
       title = &amp;quot;Patient Treatment Timeline&amp;quot;,
       subtitle = &amp;quot;x indicates month of patient death&amp;quot;) +
  # edit legend box and make patient ids small
  theme(axis.text.y = element_text(size=6),
        legend.position = c(.6, .9), legend.direction = &amp;quot;horizontal&amp;quot;,
        legend.background = element_rect(linetype=&amp;quot;solid&amp;quot;, colour =&amp;quot;black&amp;quot;)) +
  # remove extra space around timeline
  scale_x_continuous(expand=c(0.01,0.01)) +
  # set the color of the lines and points
  scale_color_manual(values=c(&amp;quot;dodgerblue&amp;quot;,&amp;quot;firebrick1&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 515 rows containing missing values (geom_point).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I have never made one of these plots for publication, so I don’t mind that the subtitle contains legend information. If you wanted to have the &lt;code&gt;month_death&lt;/code&gt; markers in a legend, you could change:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;geom_point(aes(x = month_death, y = pt_id), col = &amp;quot;black&amp;quot;, shape = 4)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;geom_point(aes(x = month_death, y = pt_id, shape = month_death), col = &amp;quot;black&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;example-2-continuous-covariate-with-missingness&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Example 2: Continuous Covariate with Missingness&lt;/h1&gt;
&lt;p&gt;We can follow the very same steps for making a timeline for a continuous variable.&lt;/p&gt;
&lt;p&gt;Again, here is the data generation code so you can make these plots yourself:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_cc &amp;lt;- 
  tibble(.rows = n) %&amp;gt;%
  mutate(pt_id = row_number(),
         months_followup = round(runif(n, 0, 12)), # random months of follow up
         pt_cov_mean = runif(n, 80, 150), # random mean of a patient&amp;#39;s covariate measures
         death = rbinom(n, 1, 0.5)) %&amp;gt;% # random death
  group_by(pt_id) %&amp;gt;%
  complete(months_followup = full_seq(0:max(months_followup), 1)) %&amp;gt;%
  fill(pt_cov_mean, death, .direction = &amp;quot;up&amp;quot;) %&amp;gt;%
  mutate(last_month_followup = max(months_followup),
         death_date = case_when(death == 1 ~ last_month_followup, TRUE ~ NA_real_)) %&amp;gt;%
  ungroup() %&amp;gt;%
  mutate(cov = rnorm(row_number(), pt_cov_mean, 10))  # everyone&amp;#39;s covariates are close to their original mean (use to see patterns later)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This time I am incorporating missingness at a patient-level on my simulated covariate measurements to show how we can use the plots to look at potential patterns in missingness.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_cc_samp &amp;lt;- dat_cc %&amp;gt;%
  mutate(idx = row_number()) %&amp;gt;%
  sample_frac(.4, weight = pt_cov_mean^3)  %&amp;gt;% # sample 40% of data, with weights for the sample determined by the patient&amp;#39;s mean covariate. This would mean patients with a higher mean covariate measure are more likely to have missing data.
  pull(idx)

dat_cc_miss  &amp;lt;- dat_cc %&amp;gt;%
  mutate(cov = case_when(row_number() %in% dat_cc_samp ~ NA_real_,
                         TRUE ~ cov)) %&amp;gt;%
  select(pt_id, months_followup, cov, death)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looking again at the data we’ll be using:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;knitr::kable(head(dat_cc_miss))&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;right&#34;&gt;pt_id&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;months_followup&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cov&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;death&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;91.69544&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;156.57317&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;172.23156&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We can plot the data and see this missingness with gray timeline points and lines:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_cc_miss %&amp;gt;%
  group_by(pt_id) %&amp;gt;%
  mutate(last_month_followup = max(months_followup), 
         month_death = case_when(death == 1 ~ last_month_followup, TRUE ~ NA_real_)) %&amp;gt;%
  ungroup() %&amp;gt;%
  mutate(pt_id = fct_rev(fct_reorder(factor(pt_id), last_month_followup))) %&amp;gt;%
  ggplot(aes(x = months_followup, y = pt_id,
             group = pt_id, col = cov)) +
  geom_line()  + 
  geom_point(shape = 15) + 
  geom_point(aes(x = month_death, y = pt_id), shape=4, col=&amp;quot;black&amp;quot;) +
  theme_bw() +
  labs(x = &amp;quot;Months of Follow-Up&amp;quot;, y = &amp;quot;Patient ID&amp;quot;, col = &amp;quot;Covariate&amp;quot;,
       title = &amp;quot;Patient Timelines: Continuous Covariate&amp;quot;,
       subtitle = &amp;quot;x indicates month of patient death, gray indicates missing covariate&amp;quot;) +
  theme(axis.text.y = element_text(size=6),
        legend.position = c(.7, .9),
        legend.direction = &amp;quot;horizontal&amp;quot;,
        legend.background = element_rect(linetype=&amp;quot;solid&amp;quot;, colour =&amp;quot;black&amp;quot;)) +
  scale_x_continuous(expand=c(0.01,0.01)) +
  scale_color_gradient(low=&amp;quot;dodgerblue&amp;quot;, high=&amp;quot;firebrick1&amp;quot;, na.value = &amp;quot;lightgray&amp;quot;,
                       breaks=c(90, 120, 150, 180)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 143 rows containing missing values (geom_point).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, we could rearrange our timelines by the number of measures we have for each patient’s &lt;code&gt;cov&lt;/code&gt;ariate of interest by making a new column containing the &lt;code&gt;sum(!is.na(cov))&lt;/code&gt; and rearranging our &lt;code&gt;pt_id&lt;/code&gt; by that column.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_cc_miss %&amp;gt;%
  group_by(pt_id) %&amp;gt;%
  mutate(last_month_followup = max(months_followup),
         # a column containing how many measures we have for each patient
         n_measures = sum(!is.na(cov))) %&amp;gt;%
  ungroup() %&amp;gt;%
  mutate(
    # reorder IDs by number of measures we have for each patient
    pt_id = fct_rev(fct_reorder(factor(pt_id), n_measures)),
  month_death = case_when(death == 1 ~ last_month_followup, TRUE ~ NA_real_)) %&amp;gt;%
  ggplot(aes(x = months_followup, y = pt_id,
             group = pt_id, col = cov)) +
  geom_line()  + 
  geom_point(shape = 15) + 
  geom_point(aes(x = month_death, y = pt_id), shape=4, col=&amp;quot;black&amp;quot;) +
  theme_bw() +
  labs(x = &amp;quot;Months of Follow-Up&amp;quot;, y = &amp;quot;Patient ID&amp;quot;, col = &amp;quot;Covariate&amp;quot;,
       title = &amp;quot;Patient Timelines: Continuous Covariate&amp;quot;,
       subtitle = &amp;quot;x indicates month of patient death, gray indicates missing covariate&amp;quot;) +
  theme(axis.text.y = element_text(size=6),
        legend.position = c(.7, .9),
        legend.direction = &amp;quot;horizontal&amp;quot;,
        legend.background = element_rect(linetype=&amp;quot;solid&amp;quot;, colour =&amp;quot;black&amp;quot;)) +
  scale_x_continuous(expand=c(0.01,0.01)) +
  scale_color_gradient(low=&amp;quot;dodgerblue&amp;quot;,high=&amp;quot;firebrick1&amp;quot;,na.value = &amp;quot;lightgray&amp;quot;,
                       breaks=c(90, 120, 150, 180)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 143 rows containing missing values (geom_point).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;From this plot we can start to see that patients with more missing measurements have higher covariate measurements. This becomes clearer if we rearrange patients by their &lt;em&gt;proportion&lt;/em&gt; of non-missing measurements.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat_cc_miss %&amp;gt;%
  group_by(pt_id) %&amp;gt;%
  mutate(last_month_followup = max(months_followup),
         # the proportion is the total number of measures divided by the total months of followup
         prop_measures = sum(!is.na(cov))/last_month_followup) %&amp;gt;%
  ungroup() %&amp;gt;%
  # reorder IDs by proportion of measures we have for each patient
  mutate(pt_id = fct_rev(fct_reorder(factor(pt_id), prop_measures)),
  month_death = case_when(death == 1 ~ last_month_followup, TRUE ~ NA_real_)) %&amp;gt;%
  ggplot(aes(x = months_followup, y = pt_id,
             group = pt_id, col = cov)) +
  geom_line()  + 
  geom_point(shape = 15) + 
  geom_point(aes(x = month_death, y = pt_id), shape=4, col=&amp;quot;black&amp;quot;) +
  theme_bw() +
  labs(x = &amp;quot;Months of Follow-Up&amp;quot;, y = &amp;quot;Patient ID&amp;quot;, col = &amp;quot;Covariate&amp;quot;,
       title = &amp;quot;Patient Timelines: Continuous Covariate&amp;quot;,
       subtitle = &amp;quot;x indicates month of patient death, gray indicates missing covariate&amp;quot;) +
  theme(axis.text.y = element_text(size=6), # move legend to the side by removing legend location
        legend.background = element_rect(linetype=&amp;quot;solid&amp;quot;, colour =&amp;quot;black&amp;quot;)) +
  scale_x_continuous(expand=c(0.01,0.01)) +
  scale_color_gradient(low=&amp;quot;dodgerblue&amp;quot;,high=&amp;quot;firebrick1&amp;quot;,na.value = &amp;quot;lightgray&amp;quot;,
                       breaks=c(90, 120, 150, 180)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 143 rows containing missing values (geom_point).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/trt-timelines/trt-timelines_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If this were my real data, I would follow up with my research collaborators for more information on the missingness mechanism.&lt;/p&gt;
&lt;p&gt;Please let me know if you have questions or a suggestion for a data set. Happy treatment timeline plotting!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Data Wrangling with dplyr</title>
      <link>/blog/dplyr/data-wrangling/</link>
      <pubDate>Tue, 05 Mar 2019 21:13:14 -0500</pubDate>
      <guid>/blog/dplyr/data-wrangling/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;a-presentation-for-weill-cornell-medicines-biostatistics-computing-club&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A Presentation for Weill Cornell Medicine’s Biostatistics Computing Club&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;/img/dplyr_image.jpg&#34; /&gt;
&lt;em&gt;Image courtesy of Allison Horst’s Twitter: &lt;span class=&#34;citation&#34;&gt;@allison_horst&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;div id=&#34;why-dplyr&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why dplyr?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Powerful but efficient&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Consistent syntax&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fast&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Function chaining&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Works well with entire tidyverse suite&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Efficiency*&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Simple syntax&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Function chaining&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ability to analyze external databases&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Works well with other packages in tidyverse suite
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;ggplot2&lt;/li&gt;
&lt;li&gt;tidyr&lt;/li&gt;
&lt;li&gt;stringr&lt;/li&gt;
&lt;li&gt;forcats&lt;/li&gt;
&lt;li&gt;purrr&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;*if you start dealing with data sets with &amp;gt; 1 million rows, data.table will be much faster&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(&amp;quot;iris&amp;quot;)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ── tidyverse 1.2.1 ──&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✔ ggplot2 3.2.1     ✔ purrr   0.3.2
## ✔ tibble  2.1.3     ✔ dplyr   0.8.3
## ✔ tidyr   0.8.3     ✔ stringr 1.4.0
## ✔ readr   1.3.1     ✔ forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Conflicts ───── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;tibbles&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tibbles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An “update” to the data.frame object class in R&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updates relevant for using dplyr:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Vectors of length 1 are automatically recycled&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Newly created vectors can be referenced in the same line of code&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Other perks: only the first 10 lines print to the screen so your console doesn’t get overloaded&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read more about tibbles here: &lt;a href=&#34;https://r4ds.had.co.nz/tibbles.html&#34; class=&#34;uri&#34;&gt;https://r4ds.had.co.nz/tibbles.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dplyr automatically converts objects to tbl_df (tibble data frame) objects&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;piping&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Piping&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;%&amp;gt;%&lt;/code&gt; operator from &lt;code&gt;library(magitrr)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;%&amp;gt;%&lt;/code&gt; to send an object (typically a dataframe) to the next function&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The function you pipe to will use the object in front of the &lt;code&gt;%&amp;gt;%&lt;/code&gt; as its first argument&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% head() # equivalent to head(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% head(n=3) # equivalent to head(iris, n=3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;If you don’t want it to be the first argument, use &lt;code&gt;.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% lm(Sepal.Width ~ Sepal.Length, data=.)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = Sepal.Width ~ Sepal.Length, data = .)
## 
## Coefficients:
##  (Intercept)  Sepal.Length  
##      3.41895      -0.06188&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Shortcut for &lt;code&gt;%&amp;gt;%&lt;/code&gt; is CTRL + SHIFT + M (or CMD + SHIFT + M for OSX)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A function that takes a data frame as the first argument, eg. &lt;code&gt;head()&lt;/code&gt;, is called a &lt;strong&gt;verb&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The entire tidyverse suite operates under the verb function structure, making piping especially convenient&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;main-verbs&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Main verbs&lt;/h1&gt;
&lt;div id=&#34;arrange&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;arrange()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sort data frame by column(s), lowest to highest&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;arrange(iris, Petal.Length) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1           4.6         3.6          1.0         0.2  setosa
## 2           4.3         3.0          1.1         0.1  setosa
## 3           5.8         4.0          1.2         0.2  setosa
## 4           5.0         3.2          1.2         0.2  setosa
## 5           4.7         3.2          1.3         0.2  setosa
## 6           5.4         3.9          1.3         0.4  setosa
## 7           5.5         3.5          1.3         0.2  setosa
## 8           4.4         3.0          1.3         0.2  setosa
## 9           5.0         3.5          1.3         0.3  setosa
## 10          4.5         2.3          1.3         0.3  setosa
## 11          4.4         3.2          1.3         0.2  setosa
## 12          5.1         3.5          1.4         0.2  setosa
## 13          4.9         3.0          1.4         0.2  setosa
## 14          5.0         3.6          1.4         0.2  setosa
## 15          4.6         3.4          1.4         0.3  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you specify a variable of class factor or character, you will rearrange the rows to alphabetical order&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;desc()&lt;/code&gt; if you want the opposite order&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;arrange(iris, desc(Species), # sort z to a since species is a factor
        Sepal.Width) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species
## 1           6.0         2.2          5.0         1.5 virginica
## 2           4.9         2.5          4.5         1.7 virginica
## 3           6.7         2.5          5.8         1.8 virginica
## 4           5.7         2.5          5.0         2.0 virginica
## 5           6.3         2.5          5.0         1.9 virginica
## 6           7.7         2.6          6.9         2.3 virginica
## 7           6.1         2.6          5.6         1.4 virginica
## 8           5.8         2.7          5.1         1.9 virginica
## 9           6.4         2.7          5.3         1.9 virginica
## 10          6.3         2.7          4.9         1.8 virginica
## 11          5.8         2.7          5.1         1.9 virginica
## 12          5.8         2.8          5.1         2.4 virginica
## 13          5.6         2.8          4.9         2.0 virginica
## 14          7.7         2.8          6.7         2.0 virginica
## 15          6.2         2.8          4.8         1.8 virginica&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;mutate&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;mutate()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add a new variable (while preserving all existing variables)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mutate(iris, logSepLength = log(Sepal.Length)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species logSepLength
## 1           5.1         3.5          1.4         0.2  setosa     1.629241
## 2           4.9         3.0          1.4         0.2  setosa     1.589235
## 3           4.7         3.2          1.3         0.2  setosa     1.547563
## 4           4.6         3.1          1.5         0.2  setosa     1.526056
## 5           5.0         3.6          1.4         0.2  setosa     1.609438
## 6           5.4         3.9          1.7         0.4  setosa     1.686399
## 7           4.6         3.4          1.4         0.3  setosa     1.526056
## 8           5.0         3.4          1.5         0.2  setosa     1.609438
## 9           4.4         2.9          1.4         0.2  setosa     1.481605
## 10          4.9         3.1          1.5         0.1  setosa     1.589235
## 11          5.4         3.7          1.5         0.2  setosa     1.686399
## 12          4.8         3.4          1.6         0.2  setosa     1.568616
## 13          4.8         3.0          1.4         0.1  setosa     1.568616
## 14          4.3         3.0          1.1         0.1  setosa     1.458615
## 15          5.8         4.0          1.2         0.2  setosa     1.757858&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;There’s also &lt;code&gt;transmute()&lt;/code&gt; which deletes the old column(s) you use to make the new column&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% transmute(Length_diff = Sepal.Length - Petal.Length,
                   Width_diff = Sepal.Width - Petal.Width) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Length_diff Width_diff
## 1          3.7        3.3
## 2          3.5        2.8
## 3          3.4        3.0
## 4          3.1        2.9
## 5          3.6        3.4
## 6          3.7        3.5
## 7          3.2        3.1
## 8          3.5        3.2
## 9          3.0        2.7
## 10         3.4        3.0
## 11         3.9        3.5
## 12         3.2        3.2
## 13         3.4        2.9
## 14         3.2        2.9
## 15         4.6        3.8&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;filter&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Return rows matching specified conditions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use with &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;%in%&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, and &lt;code&gt;!=&lt;/code&gt;. Separating conditions by &lt;code&gt;,&lt;/code&gt; represents the &lt;code&gt;&amp;amp;&lt;/code&gt; argument.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% filter(Sepal.Length &amp;gt;= 2) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa
## 11          5.4         3.7          1.5         0.2  setosa
## 12          4.8         3.4          1.6         0.2  setosa
## 13          4.8         3.0          1.4         0.1  setosa
## 14          4.3         3.0          1.1         0.1  setosa
## 15          5.8         4.0          1.2         0.2  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% filter(Petal.Length &amp;gt;= mean(Petal.Length)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
## 1           7.0         3.2          4.7         1.4 versicolor
## 2           6.4         3.2          4.5         1.5 versicolor
## 3           6.9         3.1          4.9         1.5 versicolor
## 4           5.5         2.3          4.0         1.3 versicolor
## 5           6.5         2.8          4.6         1.5 versicolor
## 6           5.7         2.8          4.5         1.3 versicolor
## 7           6.3         3.3          4.7         1.6 versicolor
## 8           6.6         2.9          4.6         1.3 versicolor
## 9           5.2         2.7          3.9         1.4 versicolor
## 10          5.9         3.0          4.2         1.5 versicolor
## 11          6.0         2.2          4.0         1.0 versicolor
## 12          6.1         2.9          4.7         1.4 versicolor
## 13          6.7         3.1          4.4         1.4 versicolor
## 14          5.6         3.0          4.5         1.5 versicolor
## 15          5.8         2.7          4.1         1.0 versicolor&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% filter(Species != &amp;quot;versicolor&amp;quot;) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa
## 11          5.4         3.7          1.5         0.2  setosa
## 12          4.8         3.4          1.6         0.2  setosa
## 13          4.8         3.0          1.4         0.1  setosa
## 14          4.3         3.0          1.1         0.1  setosa
## 15          5.8         4.0          1.2         0.2  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% filter(Species %in% c(&amp;quot;versicolor&amp;quot;, &amp;quot;setosa&amp;quot;)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1           5.1         3.5          1.4         0.2  setosa
## 2           4.9         3.0          1.4         0.2  setosa
## 3           4.7         3.2          1.3         0.2  setosa
## 4           4.6         3.1          1.5         0.2  setosa
## 5           5.0         3.6          1.4         0.2  setosa
## 6           5.4         3.9          1.7         0.4  setosa
## 7           4.6         3.4          1.4         0.3  setosa
## 8           5.0         3.4          1.5         0.2  setosa
## 9           4.4         2.9          1.4         0.2  setosa
## 10          4.9         3.1          1.5         0.1  setosa
## 11          5.4         3.7          1.5         0.2  setosa
## 12          4.8         3.4          1.6         0.2  setosa
## 13          4.8         3.0          1.4         0.1  setosa
## 14          4.3         3.0          1.1         0.1  setosa
## 15          5.8         4.0          1.2         0.2  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;select&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Keep only specified variables&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(iris, Sepal.Length, Sepal.Width) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width
## 1           5.1         3.5
## 2           4.9         3.0
## 3           4.7         3.2
## 4           4.6         3.1
## 5           5.0         3.6
## 6           5.4         3.9
## 7           4.6         3.4
## 8           5.0         3.4
## 9           4.4         2.9
## 10          4.9         3.1
## 11          5.4         3.7
## 12          4.8         3.4
## 13          4.8         3.0
## 14          4.3         3.0
## 15          5.8         4.0&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Specify variables to exclude with &lt;code&gt;-&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(iris, -Species) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length Petal.Width
## 1           5.1         3.5          1.4         0.2
## 2           4.9         3.0          1.4         0.2
## 3           4.7         3.2          1.3         0.2
## 4           4.6         3.1          1.5         0.2
## 5           5.0         3.6          1.4         0.2
## 6           5.4         3.9          1.7         0.4
## 7           4.6         3.4          1.4         0.3
## 8           5.0         3.4          1.5         0.2
## 9           4.4         2.9          1.4         0.2
## 10          4.9         3.1          1.5         0.1
## 11          5.4         3.7          1.5         0.2
## 12          4.8         3.4          1.6         0.2
## 13          4.8         3.0          1.4         0.1
## 14          4.3         3.0          1.1         0.1
## 15          5.8         4.0          1.2         0.2&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Select a range of variables with &lt;code&gt;:&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(iris, Sepal.Length:Petal.Length) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length
## 1           5.1         3.5          1.4
## 2           4.9         3.0          1.4
## 3           4.7         3.2          1.3
## 4           4.6         3.1          1.5
## 5           5.0         3.6          1.4
## 6           5.4         3.9          1.7
## 7           4.6         3.4          1.4
## 8           5.0         3.4          1.5
## 9           4.4         2.9          1.4
## 10          4.9         3.1          1.5
## 11          5.4         3.7          1.5
## 12          4.8         3.4          1.6
## 13          4.8         3.0          1.4
## 14          4.3         3.0          1.1
## 15          5.8         4.0          1.2&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;If you select just one column, you will still get a dataframe. If you need a vector, use &lt;code&gt;pull()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pull(iris, Sepal.Length) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 5.1 4.9 4.7 4.6 5.0 5.4 4.6 5.0 4.4 4.9 5.4 4.8 4.8 4.3 5.8&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;summarise&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;summarise()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Condenses data down to one value per group&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summarise(iris, mean(Petal.Length)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   mean(Petal.Length)
## 1              3.758&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summarise(iris, sd_pl = sd(Petal.Length), var_pl = sd(Petal.Length)^2) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      sd_pl   var_pl
## 1 1.765298 3.116278&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;group_by&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;group_by()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Invisibly groups data by specified column(s)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use with other verbs to get grouped information&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% group_by(Species) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 15 x 5
## # Groups:   Species [1]
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;  
##  1          5.1         3.5          1.4         0.2 setosa 
##  2          4.9         3            1.4         0.2 setosa 
##  3          4.7         3.2          1.3         0.2 setosa 
##  4          4.6         3.1          1.5         0.2 setosa 
##  5          5           3.6          1.4         0.2 setosa 
##  6          5.4         3.9          1.7         0.4 setosa 
##  7          4.6         3.4          1.4         0.3 setosa 
##  8          5           3.4          1.5         0.2 setosa 
##  9          4.4         2.9          1.4         0.2 setosa 
## 10          4.9         3.1          1.5         0.1 setosa 
## 11          5.4         3.7          1.5         0.2 setosa 
## 12          4.8         3.4          1.6         0.2 setosa 
## 13          4.8         3            1.4         0.1 setosa 
## 14          4.3         3            1.1         0.1 setosa 
## 15          5.8         4            1.2         0.2 setosa&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;%
  group_by(Species) %&amp;gt;%
  summarise(mean(Petal.Length), sd(Petal.Length)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   Species    `mean(Petal.Length)` `sd(Petal.Length)`
##   &amp;lt;fct&amp;gt;                     &amp;lt;dbl&amp;gt;              &amp;lt;dbl&amp;gt;
## 1 setosa                     1.46              0.174
## 2 versicolor                 4.26              0.470
## 3 virginica                  5.55              0.552&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Data will remain grouped until you use &lt;code&gt;ungroup()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;rename&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;rename()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Give your columns new names. Syntax is newColumn = oldColumn.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% rename(sep_len = Sepal.Length) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    sep_len Sepal.Width Petal.Length Petal.Width Species
## 1      5.1         3.5          1.4         0.2  setosa
## 2      4.9         3.0          1.4         0.2  setosa
## 3      4.7         3.2          1.3         0.2  setosa
## 4      4.6         3.1          1.5         0.2  setosa
## 5      5.0         3.6          1.4         0.2  setosa
## 6      5.4         3.9          1.7         0.4  setosa
## 7      4.6         3.4          1.4         0.3  setosa
## 8      5.0         3.4          1.5         0.2  setosa
## 9      4.4         2.9          1.4         0.2  setosa
## 10     4.9         3.1          1.5         0.1  setosa
## 11     5.4         3.7          1.5         0.2  setosa
## 12     4.8         3.4          1.6         0.2  setosa
## 13     4.8         3.0          1.4         0.1  setosa
## 14     4.3         3.0          1.1         0.1  setosa
## 15     5.8         4.0          1.2         0.2  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;!-- * If you have weird characters in your column names, put ` signs around the old column name, not &#34; --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;helper-functions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Helper functions&lt;/h1&gt;
&lt;div id=&#34;everything&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;everything()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Move columns to the front of your data&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(iris, Species, everything()) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Species Sepal.Length Sepal.Width Petal.Length Petal.Width
## 1   setosa          5.1         3.5          1.4         0.2
## 2   setosa          4.9         3.0          1.4         0.2
## 3   setosa          4.7         3.2          1.3         0.2
## 4   setosa          4.6         3.1          1.5         0.2
## 5   setosa          5.0         3.6          1.4         0.2
## 6   setosa          5.4         3.9          1.7         0.4
## 7   setosa          4.6         3.4          1.4         0.3
## 8   setosa          5.0         3.4          1.5         0.2
## 9   setosa          4.4         2.9          1.4         0.2
## 10  setosa          4.9         3.1          1.5         0.1
## 11  setosa          5.4         3.7          1.5         0.2
## 12  setosa          4.8         3.4          1.6         0.2
## 13  setosa          4.8         3.0          1.4         0.1
## 14  setosa          4.3         3.0          1.1         0.1
## 15  setosa          5.8         4.0          1.2         0.2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;starts_with&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;starts_with()&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(iris, starts_with(&amp;quot;Petal&amp;quot;)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Petal.Length Petal.Width
## 1           1.4         0.2
## 2           1.4         0.2
## 3           1.3         0.2
## 4           1.5         0.2
## 5           1.4         0.2
## 6           1.7         0.4
## 7           1.4         0.3
## 8           1.5         0.2
## 9           1.4         0.2
## 10          1.5         0.1
## 11          1.5         0.2
## 12          1.6         0.2
## 13          1.4         0.1
## 14          1.1         0.1
## 15          1.2         0.2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;ends_with&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;ends_with()&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(iris, ends_with(&amp;quot;Length&amp;quot;)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Petal.Length
## 1           5.1          1.4
## 2           4.9          1.4
## 3           4.7          1.3
## 4           4.6          1.5
## 5           5.0          1.4
## 6           5.4          1.7
## 7           4.6          1.4
## 8           5.0          1.5
## 9           4.4          1.4
## 10          4.9          1.5
## 11          5.4          1.5
## 12          4.8          1.6
## 13          4.8          1.4
## 14          4.3          1.1
## 15          5.8          1.2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;contains&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;contains()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Searches column names for a specified string&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(iris, contains(&amp;quot;Wid&amp;quot;)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Width Petal.Width
## 1          3.5         0.2
## 2          3.0         0.2
## 3          3.2         0.2
## 4          3.1         0.2
## 5          3.6         0.2
## 6          3.9         0.4
## 7          3.4         0.3
## 8          3.4         0.2
## 9          2.9         0.2
## 10         3.1         0.1
## 11         3.7         0.2
## 12         3.4         0.2
## 13         3.0         0.1
## 14         3.0         0.1
## 15         4.0         0.2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;matches&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;matches()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Searches column names for a specified regular expression&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(iris, matches(&amp;quot;wid|spec&amp;quot;)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Width Petal.Width Species
## 1          3.5         0.2  setosa
## 2          3.0         0.2  setosa
## 3          3.2         0.2  setosa
## 4          3.1         0.2  setosa
## 5          3.6         0.2  setosa
## 6          3.9         0.4  setosa
## 7          3.4         0.3  setosa
## 8          3.4         0.2  setosa
## 9          2.9         0.2  setosa
## 10         3.1         0.1  setosa
## 11         3.7         0.2  setosa
## 12         3.4         0.2  setosa
## 13         3.0         0.1  setosa
## 14         3.0         0.1  setosa
## 15         4.0         0.2  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more info on regex see &lt;a href=&#34;https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285&#34; title=&#34;here&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;row_number&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;row_number()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Specify which row number you want for your verb&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;%
  group_by(Species) %&amp;gt;%
  filter(row_number() == 1) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
## # Groups:   Species [3]
##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species   
##          &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;     
## 1          5.1         3.5          1.4         0.2 setosa    
## 2          7           3.2          4.7         1.4 versicolor
## 3          6.3         3.3          6           2.5 virginica&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;n&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;n()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;References the number of rows in your data frame (or for each group in a &lt;code&gt;&#39;grouped_df&#39;&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;%
  group_by(Species) %&amp;gt;%
  filter(row_number() == n()) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
## # Groups:   Species [3]
##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species   
##          &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;     
## 1          5           3.3          1.4         0.2 setosa    
## 2          5.7         2.8          4.1         1.3 versicolor
## 3          5.9         3            5.1         1.8 virginica&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;fancy-verbs&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Fancy verbs&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Scoped verbs take the additional arguments &lt;strong&gt;.predicate&lt;/strong&gt;, &lt;strong&gt;.funs&lt;/strong&gt;, and &lt;strong&gt;.vars&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;They end in &lt;code&gt;_at()&lt;/code&gt;, &lt;code&gt;_if()&lt;/code&gt; and &lt;code&gt;_all()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Signify what function (&lt;strong&gt;.funs&lt;/strong&gt;) should be applied too &lt;code&gt;all&lt;/code&gt; variables, only &lt;code&gt;at&lt;/code&gt; certain variables (&lt;strong&gt;.vars&lt;/strong&gt;), or only &lt;code&gt;if&lt;/code&gt; variables meet a certain condition (&lt;strong&gt;.predicate&lt;/strong&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ie. &lt;code&gt;mutate_at()&lt;/code&gt;, &lt;code&gt;mutate_if()&lt;/code&gt;, &lt;code&gt;mutate_all()&lt;/code&gt;, &lt;code&gt;summarise_if()&lt;/code&gt;, &lt;code&gt;summarise_at()&lt;/code&gt;, &lt;code&gt;summarise_all()&lt;/code&gt;, &lt;code&gt;select_if()&lt;/code&gt;, &lt;code&gt;select_at()&lt;/code&gt;, &lt;code&gt;rename_if()&lt;/code&gt;, &lt;code&gt;filter_all()&lt;/code&gt;, &lt;code&gt;arrange_all()&lt;/code&gt;, &lt;code&gt;group_by_at()&lt;/code&gt; …the list goes on!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A few examples (we will see more later)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% select_if(.predicate = is.numeric) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length Petal.Width
## 1           5.1         3.5          1.4         0.2
## 2           4.9         3.0          1.4         0.2
## 3           4.7         3.2          1.3         0.2
## 4           4.6         3.1          1.5         0.2
## 5           5.0         3.6          1.4         0.2
## 6           5.4         3.9          1.7         0.4
## 7           4.6         3.4          1.4         0.3
## 8           5.0         3.4          1.5         0.2
## 9           4.4         2.9          1.4         0.2
## 10          4.9         3.1          1.5         0.1
## 11          5.4         3.7          1.5         0.2
## 12          4.8         3.4          1.6         0.2
## 13          4.8         3.0          1.4         0.1
## 14          4.3         3.0          1.1         0.1
## 15          5.8         4.0          1.2         0.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% select_if(.predicate = is.numeric, .funs=funs(paste0(&amp;quot;num_&amp;quot;,.))) %&amp;gt;% head(n=15) # can also be used to rename&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    num_Sepal.Length num_Sepal.Width num_Petal.Length num_Petal.Width
## 1               5.1             3.5              1.4             0.2
## 2               4.9             3.0              1.4             0.2
## 3               4.7             3.2              1.3             0.2
## 4               4.6             3.1              1.5             0.2
## 5               5.0             3.6              1.4             0.2
## 6               5.4             3.9              1.7             0.4
## 7               4.6             3.4              1.4             0.3
## 8               5.0             3.4              1.5             0.2
## 9               4.4             2.9              1.4             0.2
## 10              4.9             3.1              1.5             0.1
## 11              5.4             3.7              1.5             0.2
## 12              4.8             3.4              1.6             0.2
## 13              4.8             3.0              1.4             0.1
## 14              4.3             3.0              1.1             0.1
## 15              5.8             4.0              1.2             0.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% summarise_if(.predicate = is.numeric, .funs = funs(mean(., na.rm=T))) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width
## 1     5.843333    3.057333        3.758    1.199333&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;% mutate_at(.vars = vars(c(&amp;quot;Sepal.Length&amp;quot;,&amp;quot;Petal.Length&amp;quot;)),
                                         .funs = funs(scale)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1   -0.89767388         3.5    -1.335752         0.2  setosa
## 2   -1.13920048         3.0    -1.335752         0.2  setosa
## 3   -1.38072709         3.2    -1.392399         0.2  setosa
## 4   -1.50149039         3.1    -1.279104         0.2  setosa
## 5   -1.01843718         3.6    -1.335752         0.2  setosa
## 6   -0.53538397         3.9    -1.165809         0.4  setosa
## 7   -1.50149039         3.4    -1.335752         0.3  setosa
## 8   -1.01843718         3.4    -1.279104         0.2  setosa
## 9   -1.74301699         2.9    -1.335752         0.2  setosa
## 10  -1.13920048         3.1    -1.279104         0.1  setosa
## 11  -0.53538397         3.7    -1.279104         0.2  setosa
## 12  -1.25996379         3.4    -1.222456         0.2  setosa
## 13  -1.25996379         3.0    -1.335752         0.1  setosa
## 14  -1.86378030         3.0    -1.505695         0.1  setosa
## 15  -0.05233076         4.0    -1.449047         0.2  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# z scores by Species for all numeric variables
iris %&amp;gt;% group_by(Species) %&amp;gt;%
  mutate_if(.predicate = is.numeric, .funs = funs(scale)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 15 x 5
## # Groups:   Species [1]
##    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
##           &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;  
##  1       0.267       0.190        -0.357      -0.436 setosa 
##  2      -0.301      -1.13         -0.357      -0.436 setosa 
##  3      -0.868      -0.601        -0.933      -0.436 setosa 
##  4      -1.15       -0.865         0.219      -0.436 setosa 
##  5      -0.0170      0.454        -0.357      -0.436 setosa 
##  6       1.12        1.25          1.37        1.46  setosa 
##  7      -1.15       -0.0739       -0.357       0.512 setosa 
##  8      -0.0170     -0.0739        0.219      -0.436 setosa 
##  9      -1.72       -1.39         -0.357      -0.436 setosa 
## 10      -0.301      -0.865         0.219      -1.39  setosa 
## 11       1.12        0.718         0.219      -0.436 setosa 
## 12      -0.584      -0.0739        0.795      -0.436 setosa 
## 13      -0.584      -1.13         -0.357      -1.39  setosa 
## 14      -2.00       -1.13         -2.08       -1.39  setosa 
## 15       2.25        1.51         -1.51       -0.436 setosa&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;I have never used any of the &lt;code&gt;group_by_*()&lt;/code&gt; but I imagine they’re useful when you have a large selection of identifiers/grouping variables that you can call easily with a predicate (for example, &lt;code&gt;is.factor&lt;/code&gt;). They can also be used with a &lt;strong&gt;.funs&lt;/strong&gt; argument as a shortcut to &lt;code&gt;group_by() %&amp;gt;% mutate()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;miscellaneous-verbs&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Miscellaneous verbs&lt;/h1&gt;
&lt;div id=&#34;lag&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;lag()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Makes a new column with the value of one row previously&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;lead&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;lead()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Makes a new column with the value of one row ahead&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- runif(5)
cbind(ahead = lead(x), x, behind = lag(x))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           ahead          x    behind
## [1,] 0.47072787 0.78080563        NA
## [2,] 0.64402818 0.47072787 0.7808056
## [3,] 0.32345814 0.64402818 0.4707279
## [4,] 0.08515902 0.32345814 0.6440282
## [5,]         NA 0.08515902 0.3234581&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Can choose a time column to order your new values by with the argument &lt;code&gt;&#39;order_by&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- ```{r} --&gt;
&lt;!-- df &lt;- data.frame(year = 2000:2005, value = (0:5) ^ 2) --&gt;
&lt;!-- df --&gt;
&lt;!-- scrambled &lt;- df[sample(nrow(df)), ] --&gt;
&lt;!-- scrambled --&gt;
&lt;!-- right &lt;- mutate(scrambled, prev = lag(value, order_by = year)) --&gt;
&lt;!-- arrange(right, year) --&gt;
&lt;!-- ``` --&gt;
&lt;ul&gt;
&lt;li&gt;Lag and lead are very useful for longitudinal models&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;complete&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;complete()&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;incomplete_df &amp;lt;- data.frame(day = c(1,3,7,9), dose = c(0, 25, 40, 30)) %&amp;gt;% head(n=15)
incomplete_df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   day dose
## 1   1    0
## 2   3   25
## 3   7   40
## 4   9   30&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;complete(incomplete_df, day = full_seq(1:max(day), 1)) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 2
##     day  dose
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     0
## 2     2    NA
## 3     3    25
## 4     4    NA
## 5     5    NA
## 6     6    NA
## 7     7    40
## 8     8    NA
## 9     9    30&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fill&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fill in missing values with values before or after&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;incomplete_df %&amp;gt;%
  complete(day = full_seq(1:max(day), 1)) %&amp;gt;%
  fill(dose, .direction = &amp;quot;down&amp;quot;) %&amp;gt;% head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 2
##     day  dose
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     0
## 2     2     0
## 3     3    25
## 4     4    25
## 5     5    25
## 6     6    25
## 7     7    40
## 8     8    40
## 9     9    30&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;drop_na&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;drop_na()&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;incomplete_df %&amp;gt;%
  complete(day = full_seq(1:max(day), 1)) %&amp;gt;%
  drop_na() %&amp;gt;% head(n=15) # when you have more variables, specify which columns you care about dropping NAs from&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##     day  dose
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     0
## 2     3    25
## 3     7    40
## 4     9    30&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sample_frac&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;sample_frac()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Randomly sample a specified fraction of rows of a data frame&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mydat &amp;lt;- data.frame(id = sample(1:100, 20), meas = rnorm(20))
mydat&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     id         meas
## 1   57  2.288186793
## 2  100 -1.602300385
## 3   46  0.609128605
## 4   85 -0.481366290
## 5   71 -0.333337018
## 6   99  0.551787362
## 7    5 -0.042839936
## 8   75 -0.803681418
## 9   67  0.904749782
## 10  23  0.333527940
## 11  77  0.040703715
## 12  33  0.002205167
## 13  37  0.943927491
## 14  41  1.027059802
## 15  64  1.005199118
## 16  62  0.591302764
## 17   3  1.262050643
## 18   7 -0.644000308
## 19  97 -0.768234573
## 20  45  0.698145334&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mydat %&amp;gt;% sample_frac(size = .5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     id       meas
## 1   71 -0.3333370
## 2    3  1.2620506
## 3   75 -0.8036814
## 4   85 -0.4813663
## 5   45  0.6981453
## 6   64  1.0051991
## 7  100 -1.6023004
## 8   62  0.5913028
## 9   37  0.9439275
## 10  41  1.0270598&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mydat %&amp;gt;% sample_frac(size= .5, replace = T) # you can also add sampling weights&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    id         meas
## 1  62  0.591302764
## 2  75 -0.803681418
## 3  33  0.002205167
## 4  97 -0.768234573
## 5  23  0.333527940
## 6  23  0.333527940
## 7  67  0.904749782
## 8  62  0.591302764
## 9  85 -0.481366290
## 10 75 -0.803681418&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sample_n&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;sample_n()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Randomly sample a specified number of rows of a data frame&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mydat %&amp;gt;% sample_n(3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id      meas
## 1 62 0.5913028
## 2 37 0.9439275
## 3 41 1.0270598&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;joining-functions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Joining functions&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- data.frame(id = c(&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;), val = 1:3)
y &amp;lt;- data.frame(id = c(&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;D&amp;quot;), val = c(&amp;quot;T&amp;quot;,&amp;quot;F&amp;quot;,&amp;quot;T&amp;quot;))
x&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id val
## 1  A   1
## 2  B   2
## 3  C   3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id val
## 1  A   T
## 2  B   F
## 3  D   T&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;“Mutating” joins combine variables from the left and right hand sides ie. &lt;code&gt;full_join()&lt;/code&gt;, &lt;code&gt;inner_join()&lt;/code&gt;, &lt;code&gt;right_join()&lt;/code&gt;, and &lt;code&gt;left_join()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;full_join&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;full_join()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Return all rows and columns&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;full_join(x, y, by = &amp;quot;id&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id val.x val.y
## 1  A     1     T
## 2  B     2     F
## 3  C     3  &amp;lt;NA&amp;gt;
## 4  D    NA     T&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;inner_join&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;inner_join()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Return all rows from &lt;code&gt;x&lt;/code&gt; that have a match in &lt;code&gt;y&lt;/code&gt;, and all columns from &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;inner_join(x, y, by = &amp;quot;id&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id val.x val.y
## 1  A     1     T
## 2  B     2     F&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;left_join&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;left_join()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Return all rows from &lt;code&gt;x&lt;/code&gt; and all columns from &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;left_join(x, y, by = &amp;quot;id&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id val.x val.y
## 1  A     1     T
## 2  B     2     F
## 3  C     3  &amp;lt;NA&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;right_join&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;right_join()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Return all rows from &lt;code&gt;x&lt;/code&gt; and all columns from &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;right_join(x, y, by = &amp;quot;id&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id val.x val.y
## 1  A     1     T
## 2  B     2     F
## 3  D    NA     T&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;“Filtering” joins keep cases from the left hand side, ie. &lt;code&gt;semi_join()&lt;/code&gt; and &lt;code&gt;anti_join()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;semi_join&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;semi_join()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Return all rows in &lt;code&gt;x&lt;/code&gt; that have a match in &lt;code&gt;y&lt;/code&gt;, keeping only columns from &lt;code&gt;y&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;semi_join(x, y, by = &amp;quot;id&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id val
## 1  A   1
## 2  B   2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;anti_join&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;anti_join()&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Return all rows from &lt;code&gt;x&lt;/code&gt; where there are not matching values in &lt;code&gt;y&lt;/code&gt;, keeping just the columns from &lt;code&gt;x&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;anti_join(x, y, by = &amp;quot;id&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id val
## 1  C   3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;incorporating-dplyr-into-your-workflow&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Incorporating dplyr into your workflow&lt;/h1&gt;
&lt;div id=&#34;frequency-tables&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Frequency Tables&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(kableExtra)
mtcars %&amp;gt;%
  group_by(vs, am) %&amp;gt;%
  summarise(n=n(), freq=n()/nrow(.)) %&amp;gt;%
  kable(caption=&amp;quot;Frequency Table of vs and am&amp;quot;, format=&amp;quot;html&amp;quot;) %&amp;gt;%
  kable_styling(c(&amp;quot;condensed&amp;quot;,&amp;quot;responsive&amp;quot;,&amp;quot;striped&amp;quot;,&amp;quot;hover&amp;quot;), full_width = F)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-condensed table-responsive table-striped table-hover&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-39&#34;&gt;Table 1: &lt;/span&gt;Frequency Table of vs and am
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
vs
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
am
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
freq
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.37500
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.18750
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.21875
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.21875
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;comparegroups&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;compareGroups&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(compareGroups)
iris %&amp;gt;%
  mutate(Sepal.Length.Sq = Sepal.Length^2) %&amp;gt;%
  compareGroups(Species ~ ., data = .) %&amp;gt;%
  createTable() %&amp;gt;%
  export2md() %&amp;gt;%
  kable_styling(c(&amp;quot;condensed&amp;quot;,&amp;quot;responsive&amp;quot;,&amp;quot;striped&amp;quot;,&amp;quot;hover&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-condensed table table-condensed table-responsive table-striped table-hover&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-40&#34;&gt;Table 2: &lt;/span&gt;Summary descriptives table by groups of `Species’
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
setosa
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
versicolor
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
virginica
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
p.overall
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;font-style: italic;border-bottom: 1px solid grey&#34;&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;font-style: italic;border-bottom: 1px solid grey&#34;&gt;
N=50
&lt;/td&gt;
&lt;td style=&#34;text-align:center;font-style: italic;border-bottom: 1px solid grey&#34;&gt;
N=50
&lt;/td&gt;
&lt;td style=&#34;text-align:center;font-style: italic;border-bottom: 1px solid grey&#34;&gt;
N=50
&lt;/td&gt;
&lt;td style=&#34;text-align:center;font-style: italic;border-bottom: 1px solid grey&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sepal.Length
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
5.01 (0.35)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
5.94 (0.52)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
6.59 (0.64)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&amp;lt;0.001
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sepal.Width
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3.43 (0.38)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
2.77 (0.31)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
2.97 (0.32)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&amp;lt;0.001
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Petal.Length
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
1.46 (0.17)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
4.26 (0.47)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
5.55 (0.55)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&amp;lt;0.001
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Petal.Width
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.25 (0.11)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
1.33 (0.20)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
2.03 (0.27)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&amp;lt;0.001
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Sepal.Length.Sq
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
25.2 (3.55)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
35.5 (6.16)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
43.8 (8.44)
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
&amp;lt;0.001
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;ggplotting&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;ggplotting&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;%
  filter(Species != &amp;quot;setosa&amp;quot;) %&amp;gt;%
  ggplot(aes(Sepal.Length, Petal.Width, col=Species)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/tutorial/dplyr/data-wrangling_files/figure-html/unnamed-chunk-41-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;finding-columns-of-interest&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Finding columns of interest&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;When you have too many column names to look through manually, search for a string or pattern of strings&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;load(&amp;quot;dplyr_dat.Rdata&amp;quot;)
length(names(brain))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;select(brain, matches(&amp;quot;pib.*parietal.*&amp;quot;)) %&amp;gt;% names() # regex is not case sensitive&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;PIB.PET_AAL__Parietal_Inf_L&amp;quot;        
## [2] &amp;quot;PIB.PET_AAL__Parietal_Inf_R&amp;quot;        
## [3] &amp;quot;PIB.PET_AAL__Parietal_Sup_L&amp;quot;        
## [4] &amp;quot;PIB.PET_AAL__Parietal_Sup_R&amp;quot;        
## [5] &amp;quot;PIB.PET_FS__ctx.lh.inferiorparietal&amp;quot;
## [6] &amp;quot;PIB.PET_FS__ctx.lh.superiorparietal&amp;quot;
## [7] &amp;quot;PIB.PET_FS__ctx.rh.inferiorparietal&amp;quot;
## [8] &amp;quot;PIB.PET_FS__ctx.rh.superiorparietal&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;!-- * Create summary measures using variables of interest --&gt;
&lt;!-- ```{r} --&gt;
&lt;!-- brain %&gt;% --&gt;
&lt;!--   group_by(ID) %&gt;% --&gt;
&lt;!--   transmute(PIB_Parietal = mean(c(PIB.PET_AAL__Parietal_Inf_L, --&gt;
&lt;!--                                   PIB.PET_AAL__Parietal_Inf_R, --&gt;
&lt;!--                                   PIB.PET_AAL__Parietal_Sup_L, --&gt;
&lt;!--                                   PIB.PET_AAL__Parietal_Sup_R), na.rm=T)) %&gt;% --&gt;
&lt;!--   arrange(PIB_Parietal) --&gt;
&lt;!-- ``` --&gt;
&lt;/div&gt;
&lt;div id=&#34;missing-data-wrangling&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Missing data wrangling&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Add a column flagging a value as missing and then replace the missing values with the mean of the other values&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;misdat &amp;lt;- data.frame(x1 = sample(c(1:3, NA), 13, replace=T),
                     x2 = sample(c(-5:-2,NA), 13, replace=T))
misdat&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    x1 x2
## 1   3 -3
## 2   3 -5
## 3   3 -2
## 4  NA NA
## 5  NA -5
## 6  NA -2
## 7   1 -3
## 8   3 NA
## 9   1 -4
## 10 NA -3
## 11 NA -4
## 12  3 -5
## 13 NA -4&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;misdat %&amp;gt;%
  mutate_all(.funs = funs(miss = ifelse(is.na(.), 1, 0))) %&amp;gt;%
  mutate_all(.funs = funs(replace_na(., mean(., na.rm=T))))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          x1        x2 x1_miss x2_miss
## 1  3.000000 -3.000000       0       0
## 2  3.000000 -5.000000       0       0
## 3  3.000000 -2.000000       0       0
## 4  2.428571 -3.636364       1       1
## 5  2.428571 -5.000000       1       0
## 6  2.428571 -2.000000       1       0
## 7  1.000000 -3.000000       0       0
## 8  3.000000 -3.636364       0       1
## 9  1.000000 -4.000000       0       0
## 10 2.428571 -3.000000       1       0
## 11 2.428571 -4.000000       1       0
## 12 3.000000 -5.000000       0       0
## 13 2.428571 -4.000000       1       0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;longitudinal-data-wrangling-a&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Longitudinal data wrangling A&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Calculate the time since a patient was first admitted to the hospital&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;id &amp;lt;- c(1,1,1,2,2,2,2,3)
admit &amp;lt;- as.Date(c(&amp;quot;2017-06-22&amp;quot;, &amp;quot;2017-07-13&amp;quot;, &amp;quot;2017-08-29&amp;quot;,
                   &amp;quot;2017-04-01&amp;quot;, &amp;quot;2017-05-02&amp;quot;, &amp;quot;2017-11-14&amp;quot;, &amp;quot;2018-01-14&amp;quot;,
                   &amp;quot;2019-01-01&amp;quot;))
discharge &amp;lt;- as.Date(c(&amp;quot;2017-06-25&amp;quot;, &amp;quot;2017-07-31&amp;quot;, &amp;quot;2017-10-13&amp;quot;,
                   &amp;quot;2017-04-02&amp;quot;, &amp;quot;2017-05-10&amp;quot;, &amp;quot;2017-11-18&amp;quot;, &amp;quot;2018-02-12&amp;quot;,
                   &amp;quot;2019-01-05&amp;quot;))
hosp_dat &amp;lt;- data.frame(id, admit, discharge)
hosp_dat&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   id      admit  discharge
## 1  1 2017-06-22 2017-06-25
## 2  1 2017-07-13 2017-07-31
## 3  1 2017-08-29 2017-10-13
## 4  2 2017-04-01 2017-04-02
## 5  2 2017-05-02 2017-05-10
## 6  2 2017-11-14 2017-11-18
## 7  2 2018-01-14 2018-02-12
## 8  3 2019-01-01 2019-01-05&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hosp_dat %&amp;gt;%
  group_by(id) %&amp;gt;%
  mutate(days_since_init_admit = discharge - admit[1])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 4
## # Groups:   id [3]
##      id admit      discharge  days_since_init_admit
##   &amp;lt;dbl&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;date&amp;gt;     &amp;lt;drtn&amp;gt;               
## 1     1 2017-06-22 2017-06-25   3 days             
## 2     1 2017-07-13 2017-07-31  39 days             
## 3     1 2017-08-29 2017-10-13 113 days             
## 4     2 2017-04-01 2017-04-02   1 days             
## 5     2 2017-05-02 2017-05-10  39 days             
## 6     2 2017-11-14 2017-11-18 231 days             
## 7     2 2018-01-14 2018-02-12 317 days             
## 8     3 2019-01-01 2019-01-05   4 days&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;longitudinal-data-wrangling-b&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Longitudinal data wrangling B&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Make a row for every patient for every month from the start of follow up to the end of follow up (get equally spaced time intervals)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make another column containing the drugs the patient was on previously (for prediction or longitudinal models)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;load(&amp;quot;meds.Rdata&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meds&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    PatientID Months_ImplantToVisit BB_yn ACE_yn ARB_yn
## 1          1                     1     0      0      0
## 2          1                     2     0      0      0
## 3          2                     2     0      1      0
## 4          2                     3     0      1      0
## 5          2                     4     0      1      0
## 6          2                     5     0      1      0
## 7          2                     6     1      1      0
## 8          2                     8     1      1      0
## 9          2                    10     1      1      0
## 10         2                    12     1      1      0
## 11         2                    13     1      1      0
## 12         2                    14     1      1      0
## 13         2                    16     1      1      0
## 14         3                     2     0      0      0
## 15         3                     3     0      0      0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meds %&amp;gt;%
    group_by(PatientID) %&amp;gt;%
    complete(Months_ImplantToVisit = full_seq(1:max(Months_ImplantToVisit), 1)) %&amp;gt;%
    fill(ends_with(&amp;quot;_yn&amp;quot;)) %&amp;gt;%
    fill(ends_with(&amp;quot;_yn&amp;quot;), .direction=&amp;quot;up&amp;quot;) -&amp;gt; meds1
meds1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 21 x 5
## # Groups:   PatientID [3]
##    PatientID Months_ImplantToVisit BB_yn ACE_yn ARB_yn
##        &amp;lt;int&amp;gt;                 &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt;  &amp;lt;fct&amp;gt; 
##  1         1                     1 0     0      0     
##  2         1                     2 0     0      0     
##  3         2                     1 0     1      0     
##  4         2                     2 0     1      0     
##  5         2                     3 0     1      0     
##  6         2                     4 0     1      0     
##  7         2                     5 0     1      0     
##  8         2                     6 1     1      0     
##  9         2                     7 1     1      0     
## 10         2                     8 1     1      0     
## # … with 11 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meds1 %&amp;gt;%
  mutate_at(.vars = vars(ends_with(&amp;quot;_yn&amp;quot;)),
              .funs = funs(prev = lag(., order_by = Months_ImplantToVisit))) %&amp;gt;%
    fill(ends_with(&amp;quot;_prev&amp;quot;), .direction=&amp;quot;up&amp;quot;) %&amp;gt;%
  head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 15 x 8
## # Groups:   PatientID [2]
##    PatientID Months_ImplantT… BB_yn ACE_yn ARB_yn BB_yn_prev ACE_yn_prev
##        &amp;lt;int&amp;gt;            &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt;  &amp;lt;fct&amp;gt;  &amp;lt;fct&amp;gt;      &amp;lt;fct&amp;gt;      
##  1         1                1 0     0      0      0          0          
##  2         1                2 0     0      0      0          0          
##  3         2                1 0     1      0      0          1          
##  4         2                2 0     1      0      0          1          
##  5         2                3 0     1      0      0          1          
##  6         2                4 0     1      0      0          1          
##  7         2                5 0     1      0      0          1          
##  8         2                6 1     1      0      0          1          
##  9         2                7 1     1      0      1          1          
## 10         2                8 1     1      0      1          1          
## 11         2                9 1     1      0      1          1          
## 12         2               10 1     1      0      1          1          
## 13         2               11 1     1      0      1          1          
## 14         2               12 1     1      0      1          1          
## 15         2               13 1     1      0      1          1          
## # … with 1 more variable: ARB_yn_prev &amp;lt;fct&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;survival-data-wrangling&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Survival data wrangling&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Map four columns “days to…outcome” to a composite endpoint for a survival model&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Record &lt;em&gt;when&lt;/em&gt; the event occurred as Days.to.first.event and &lt;em&gt;which&lt;/em&gt; event it was in FE.status&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dems %&amp;gt;%
  select(Days.to.lastFU, Days.to.death, Days.to.stroke, Days.to.GIB, Days.to.PT) %&amp;gt;%
  # which.min cannot handle NA, so we&amp;#39;ll make NA&amp;#39;s infinity for now
  replace(is.na(.), Inf) %&amp;gt;%
  # to allow which.min to search along rows (dplyr naturally looks down columns)
  rowwise() %&amp;gt;%
  mutate(
    FUorFEtime = pmin(Days.to.lastFU, Days.to.death, Days.to.stroke,
                      Days.to.GIB, Days.to.PT,
                      na.rm = T),
    # numbers correspond to order of the Days* columns
    FUorFEstatus = which.min(c(Days.to.lastFU, Days.to.death, Days.to.stroke,
                                    Days.to.GIB, Days.to.PT)),
    # condensed variable for survival model, 1 if any event
  Event_yn = ifelse(FUorFEstatus == 1, 0, 1)) -&amp;gt; dems_int

dems_int # look at the intermediate output&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Source: local data frame [265 x 8]
## Groups: &amp;lt;by row&amp;gt;
## 
## # A tibble: 265 x 8
##    Days.to.lastFU Days.to.death Days.to.stroke Days.to.GIB Days.to.PT
##             &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt;          &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
##  1             98            98             94         Inf        Inf
##  2            163           Inf            Inf         Inf        141
##  3            185           Inf            Inf         Inf        Inf
##  4            139           Inf            Inf         Inf        Inf
##  5            196           Inf            Inf          78        Inf
##  6            161           Inf            Inf         Inf        Inf
##  7            210           Inf            185         Inf        Inf
##  8            233           Inf            Inf         Inf        Inf
##  9            239           Inf            Inf         Inf        Inf
## 10            243           Inf            Inf         Inf        Inf
## # … with 255 more rows, and 3 more variables: FUorFEtime &amp;lt;dbl&amp;gt;,
## #   FUorFEstatus &amp;lt;int&amp;gt;, Event_yn &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dems_int %&amp;gt;%
  # column names correspond to the order of the columns, rename
  mutate(FUorFEstatus = case_when(FUorFEstatus == 1 ~ &amp;quot;censored&amp;quot;,
                                  FUorFEstatus == 2 ~ &amp;quot;death&amp;quot;,
                                  FUorFEstatus == 3 ~ &amp;quot;stroke&amp;quot;,
                                  FUorFEstatus == 4 ~ &amp;quot;gib&amp;quot;,
                                  FUorFEstatus == 5 ~ &amp;quot;pt&amp;quot;,
                                  TRUE ~ &amp;quot;error&amp;quot;)) %&amp;gt;%
  # not case sensitive
  select(contains(&amp;quot;fe&amp;quot;), Event_yn) %&amp;gt;%
  # allow for joining with no duplicate cols
  rownames_to_column() %&amp;gt;%
  full_join(dems %&amp;gt;% rownames_to_column()) %&amp;gt;%
  select(-rowname) -&amp;gt; dems_clean

# check to make sure everything worked
dems_clean %&amp;gt;% filter(FUorFEstatus == &amp;quot;error&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Source: local data frame [0 x 55]
## Groups: &amp;lt;by row&amp;gt;
## 
## # A tibble: 0 x 55
## # … with 55 variables: FUorFEtime &amp;lt;dbl&amp;gt;, FUorFEstatus &amp;lt;chr&amp;gt;,
## #   Event_yn &amp;lt;dbl&amp;gt;, PatientID &amp;lt;int&amp;gt;, Year.of.Implant &amp;lt;int&amp;gt;, Outcome &amp;lt;int&amp;gt;,
## #   Days.to.lastFU &amp;lt;int&amp;gt;, Stroke &amp;lt;int&amp;gt;, Days.to.stroke &amp;lt;int&amp;gt;,
## #   TypeStroke &amp;lt;int&amp;gt;, Stroke_IA &amp;lt;int&amp;gt;, Days.to.IA.stroke &amp;lt;int&amp;gt;,
## #   TypeStroke_IA &amp;lt;int&amp;gt;, PT &amp;lt;int&amp;gt;, Days.to.PT &amp;lt;int&amp;gt;, GIB &amp;lt;int&amp;gt;,
## #   Days.to.GIB &amp;lt;int&amp;gt;, GIB_IA &amp;lt;int&amp;gt;, Days.to.GIB_IA &amp;lt;int&amp;gt;,
## #   Age.at.implant &amp;lt;int&amp;gt;, Sex &amp;lt;fct&amp;gt;, Race &amp;lt;int&amp;gt;, Caucasian &amp;lt;int&amp;gt;,
## #   AfibFlut &amp;lt;fct&amp;gt;, Smoking_Hx &amp;lt;fct&amp;gt;, DM &amp;lt;fct&amp;gt;, Ischemic &amp;lt;int&amp;gt;,
## #   HTN_Hx &amp;lt;fct&amp;gt;, Stroke_Hx &amp;lt;fct&amp;gt;, Pulmonary_Hx &amp;lt;fct&amp;gt;, ICD &amp;lt;fct&amp;gt;,
## #   IMCS &amp;lt;int&amp;gt;, DT &amp;lt;int&amp;gt;, Hb_pre &amp;lt;dbl&amp;gt;, PLT_pre &amp;lt;int&amp;gt;, INR_dx &amp;lt;dbl&amp;gt;,
## #   Creat_dx &amp;lt;dbl&amp;gt;, Height &amp;lt;dbl&amp;gt;, Weight &amp;lt;dbl&amp;gt;, BMI &amp;lt;dbl&amp;gt;, Speed &amp;lt;int&amp;gt;,
## #   PI &amp;lt;dbl&amp;gt;, Flow &amp;lt;dbl&amp;gt;, RVAD &amp;lt;fct&amp;gt;, IABP &amp;lt;fct&amp;gt;,
## #   Days.to.first.outpt.visit &amp;lt;int&amp;gt;, Days.to.IA.discharge &amp;lt;int&amp;gt;, EF &amp;lt;fct&amp;gt;,
## #   LVEDD &amp;lt;fct&amp;gt;, RV_Dysf &amp;lt;fct&amp;gt;, LDH_Dx &amp;lt;int&amp;gt;, eGFR &amp;lt;dbl&amp;gt;, AvgMAP &amp;lt;lgl&amp;gt;,
## #   Death &amp;lt;int&amp;gt;, Days.to.death &amp;lt;int&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dems_clean %&amp;gt;%
  head(n=15)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Source: local data frame [15 x 55]
## Groups: &amp;lt;by row&amp;gt;
## 
## # A tibble: 15 x 55
##    FUorFEtime FUorFEstatus Event_yn PatientID Year.of.Implant Outcome
##         &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;           &amp;lt;dbl&amp;gt;     &amp;lt;int&amp;gt;           &amp;lt;int&amp;gt;   &amp;lt;int&amp;gt;
##  1         94 stroke              1         1            2016       2
##  2        141 pt                  1         2            2016       7
##  3        185 censored            0         3            2016       7
##  4        139 censored            0         4            2016       6
##  5         78 gib                 1         5            2016       7
##  6        161 censored            0         6            2016       1
##  7        185 stroke              1         7            2016       7
##  8        233 censored            0         8            2016       7
##  9        239 censored            0         9            2016       7
## 10        243 censored            0        10            2016       7
## 11        248 censored            0        11            2016       7
## 12         51 pt                  1        12            2016       1
## 13         37 gib                 1        13            2016       7
## 14        261 censored            0        14            2016       7
## 15        265 censored            0        15            2016       7
## # … with 49 more variables: Days.to.lastFU &amp;lt;int&amp;gt;, Stroke &amp;lt;int&amp;gt;,
## #   Days.to.stroke &amp;lt;int&amp;gt;, TypeStroke &amp;lt;int&amp;gt;, Stroke_IA &amp;lt;int&amp;gt;,
## #   Days.to.IA.stroke &amp;lt;int&amp;gt;, TypeStroke_IA &amp;lt;int&amp;gt;, PT &amp;lt;int&amp;gt;,
## #   Days.to.PT &amp;lt;int&amp;gt;, GIB &amp;lt;int&amp;gt;, Days.to.GIB &amp;lt;int&amp;gt;, GIB_IA &amp;lt;int&amp;gt;,
## #   Days.to.GIB_IA &amp;lt;int&amp;gt;, Age.at.implant &amp;lt;int&amp;gt;, Sex &amp;lt;fct&amp;gt;, Race &amp;lt;int&amp;gt;,
## #   Caucasian &amp;lt;int&amp;gt;, AfibFlut &amp;lt;fct&amp;gt;, Smoking_Hx &amp;lt;fct&amp;gt;, DM &amp;lt;fct&amp;gt;,
## #   Ischemic &amp;lt;int&amp;gt;, HTN_Hx &amp;lt;fct&amp;gt;, Stroke_Hx &amp;lt;fct&amp;gt;, Pulmonary_Hx &amp;lt;fct&amp;gt;,
## #   ICD &amp;lt;fct&amp;gt;, IMCS &amp;lt;int&amp;gt;, DT &amp;lt;int&amp;gt;, Hb_pre &amp;lt;dbl&amp;gt;, PLT_pre &amp;lt;int&amp;gt;,
## #   INR_dx &amp;lt;dbl&amp;gt;, Creat_dx &amp;lt;dbl&amp;gt;, Height &amp;lt;dbl&amp;gt;, Weight &amp;lt;dbl&amp;gt;, BMI &amp;lt;dbl&amp;gt;,
## #   Speed &amp;lt;int&amp;gt;, PI &amp;lt;dbl&amp;gt;, Flow &amp;lt;dbl&amp;gt;, RVAD &amp;lt;fct&amp;gt;, IABP &amp;lt;fct&amp;gt;,
## #   Days.to.first.outpt.visit &amp;lt;int&amp;gt;, Days.to.IA.discharge &amp;lt;int&amp;gt;, EF &amp;lt;fct&amp;gt;,
## #   LVEDD &amp;lt;fct&amp;gt;, RV_Dysf &amp;lt;fct&amp;gt;, LDH_Dx &amp;lt;int&amp;gt;, eGFR &amp;lt;dbl&amp;gt;, AvgMAP &amp;lt;lgl&amp;gt;,
## #   Death &amp;lt;int&amp;gt;, Days.to.death &amp;lt;int&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;making-functions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Making functions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Problem: dplyr doesn’t know what to do with quotes around the variable name, but you can’t put the column name into a function without quotes because R will try to find it as an object in your environment…&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Solution: relying on the rlang package (sym, !!, !!!, etc)
&lt;ul&gt;
&lt;li&gt;A good tutorial: &lt;a href=&#34;http://jonthegeek.com/2018/06/04/writing-custom-tidyverse-functions/&#34; class=&#34;uri&#34;&gt;http://jonthegeek.com/2018/06/04/writing-custom-tidyverse-functions/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;irisSummary &amp;lt;- function(group){
    iris %&amp;gt;%
      group_by(!!sym(group)) %&amp;gt;%
      summarise(mean(Sepal.Length), sd(Sepal.Length))
}

irisSummary(group = &amp;quot;Species&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   Species    `mean(Sepal.Length)` `sd(Sepal.Length)`
##   &amp;lt;fct&amp;gt;                     &amp;lt;dbl&amp;gt;              &amp;lt;dbl&amp;gt;
## 1 setosa                     5.01              0.352
## 2 versicolor                 5.94              0.516
## 3 virginica                  6.59              0.636&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;irisScatPlot &amp;lt;- function(x, y){
    iris %&amp;gt;%
    ggplot(aes_string(x, y, col=&amp;quot;Species&amp;quot;)) +
    geom_point() -&amp;gt; p
  return(p)
}

irisScatPlot(x=&amp;quot;Sepal.Length&amp;quot;,y=&amp;quot;Petal.Length&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/tutorial/dplyr/data-wrangling_files/figure-html/unnamed-chunk-49-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
